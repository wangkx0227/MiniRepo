"use strict";
(() => {
  var pt = Object.defineProperty;
  var ht = (s, t) => {
    for (var e in t) pt(s, e, { get: t[e], enumerable: !0 });
  };
  var ot = {};
  ht(ot, {
    Alert: () => te,
    Appbar: () => oe,
    Avatar: () => re,
    Badge: () => se,
    BottomSheet: () => V,
    Button: () => ie,
    Card: () => ae,
    Carousel: () => Y,
    CarouselItem: () => R,
    Checkbox: () => le,
    Chip: () => ce,
    CircularProgress: () => de,
    Date: () => he,
    DatePicker: () => ue,
    Dialog: () => _,
    Divider: () => ge,
    Drawer: () => fe,
    Empty: () => xe,
    FAB: () => ve,
    Field: () => Ce,
    Fold: () => qe,
    Icon: () => ye,
    IconButton: () => be,
    LinearProgress: () => we,
    Menu: () => ke,
    MenuItem: () => Ee,
    Navigation: () => B,
    NavigationItem: () => X,
    Page: () => Se,
    Pagination: () => $e,
    Picker: () => N,
    PickerItem: () => G,
    Popup: () => ze,
    PopupMenu: () => Te,
    PopupMenuItem: () => Le,
    RadioButton: () => Fe,
    Rate: () => Me,
    Ripple: () => z,
    ScrollView: () => me,
    Search: () => Ae,
    SegmentedButton: () => H,
    SegmentedButtonItem: () => Q,
    Skeleton: () => Pe,
    Slider: () => De,
    Snackbar: () => J,
    Switch: () => Ne,
    Tab: () => I,
    TabItem: () => K,
    Table: () => He,
    Tbody: () => Ie,
    Td: () => Ye,
    TextField: () => Re,
    Th: () => Ve,
    Thead: () => je,
    Tooltip: () => _e,
    Tr: () => We,
  });
  var P = {
    CSSStyleSheet: !0,
    CSSContainer: CSS.supports("container-type", "size"),
  };
  try {
    new CSSStyleSheet();
  } catch {
    P.CSSStyleSheet = !1;
  }
  var ut = (s, t) => {
      for (let e of t) {
        if (!P.CSSStyleSheet) {
          let a = document.createElement("style");
          (a.textContent = e), s.insertBefore(a, s.firstChild);
          continue;
        }
        let r = new CSSStyleSheet();
        r.replaceSync(e), (s.adoptedStyleSheets = [...s.adoptedStyleSheets, r]);
      }
    },
    g = (s) => {
      let t = {},
        e = {};
      for (let r in s) {
        let a = s[r],
          i = { key: r, sync: !0, types: [] };
        r.startsWith("$") && ((i.key = r.slice(1)), (i.sync = !1)),
          Array.isArray(a) && ((i.types = a), (a = i.types[0])),
          (t[i.key] = a),
          (e[i.key] = {
            sync: i.sync,
            def: a,
            to: (l) => {
              switch (typeof a) {
                case "string":
                  let n = String(l);
                  return i.types.length > 0
                    ? i.types.includes(n)
                      ? n
                      : i.types[0]
                    : n;
                case "number":
                  let d = Number(l);
                  return isNaN(d) ? a : d;
                case "boolean":
                  return typeof l == "boolean" ? l : l === "true";
              }
            },
          });
      }
      return Object.defineProperty(t, "$meta", { value: e }), t;
    },
    L = (s) => s,
    mt =
      ":host{user-select:none;-webkit-user-select:none;-webkit-tap-highlight-color:transparent;outline:none}*{outline:none}",
    h = (s) => {
      let t = {
        observedAttributes: [],
        upperPropKeys: {},
        metaProps: s.props?.$meta ?? {},
        events: [],
      };
      for (let a in t.metaProps ?? {}) {
        let i = a.toLowerCase();
        t.observedAttributes.push(i), (t.upperPropKeys[i] = a);
      }
      for (let a in s.events) {
        let i = `on${a}`;
        t.observedAttributes.push(i),
          !(i in HTMLElement.prototype) && t.events.push(i);
      }
      let e = new Map();
      class r extends HTMLElement {
        static observedAttributes = t.observedAttributes;
        static define(i) {
          customElements.define(i, this);
        }
        constructor() {
          super();
          let i = this.attachShadow({ mode: "open" });
          (i.innerHTML = s.template ?? ""),
            ut(i, [
              mt,
              ...(s.style
                ? Array.isArray(s.style)
                  ? s.style
                  : [s.style]
                : []),
            ]);
          let l = { ...s.props },
            n,
            d = {};
          for (let o in l) {
            let f = this[o];
            f !== void 0 && (d[o] = f),
              Object.defineProperty(this, o, {
                configurable: !0,
                get: () => {
                  let x = n?.[o];
                  return !x || typeof x == "function" || !x.get
                    ? l[o]
                    : x.get?.(l[o]);
                },
                set: (x) => {
                  let m = t.metaProps[o],
                    p = x === void 0 ? m.def : m.to(x);
                  if (m.sync) {
                    let v = o.toLowerCase(),
                      b = this.getAttribute(v),
                      w = String(p);
                    if (p === m.def && b !== null)
                      return this.removeAttribute(v);
                    if (p !== m.def && b !== w) return this.setAttribute(v, w);
                  }
                  if (p === this[o]) return;
                  let u = l[o];
                  l[o] = p;
                  let y = n?.[o];
                  if (y)
                    try {
                      typeof y == "function" ? y(p, u) : y.set?.(p, u);
                    } catch (v) {
                      throw ((l[o] = u), v);
                    }
                },
              });
          }
          let c = {};
          for (let o of t.events) {
            let f = o;
            typeof this[f] == "function" && (c[o] = this[f]),
              Object.defineProperty(this, o, {
                configurable: !0,
                get: () => c[o] ?? null,
                set: (x) => (c[o] = typeof x == "function" ? x : void 0),
              }),
              this.addEventListener(
                o.slice(2),
                (x) => c[o] && c[o].bind(this)(x)
              );
          }
          n = s.setup?.call(this, i);
          for (let o in n?.expose ?? {})
            Object.defineProperty(this, o, { get: () => n?.expose?.[o] });
          for (let o in d) this[o] = d[o];
          (this.connectedCallback =
            this.disconnectedCallback =
            this.adoptedCallback =
            this.attributeChangedCallback =
              void 0),
            e.set(this, n);
        }
        connectedCallback() {
          e.get(this)?.onMounted?.();
        }
        disconnectedCallback() {
          e.get(this)?.onUnmounted?.();
        }
        adoptedCallback() {
          e.get(this)?.onAdopted?.();
        }
        attributeChangedCallback(i, l, n) {
          if (t.events.includes(i))
            return (this[i] = n ? new Function("event", n) : null);
          this[t.upperPropKeys[i]] = n ?? void 0;
        }
      }
      for (let a in s.methods) r[a] = s.methods[a];
      return r;
    };
  var gt = "s-alert",
    ft = g({ type: ["info", "success", "warning", "error"] }),
    xt =
      ":host{display:inline-flex;padding:8px 16px;align-items:center;line-height:22px;font-size:.875rem;font-weight:500;min-height:48px;box-sizing:border-box;border-radius:4px;color:var(--s-color-on-secondary-container, #354A53);background:var(--s-color-secondary-container, #CFE6F1)}:host([type=success]){color:var(--s-color-on-success-container, #002111);background:var(--s-color-success-container, #92f7bc)}:host([type=warning]){color:var(--s-color-on-warning-container, #221b00);background:var(--s-color-warning-container, #ffe169)}:host([type=error]){color:var(--s-color-on-error-container, #93000A);background:var(--s-color-error-container, #FFDAD6)}svg{width:24px;height:24px;fill:currentColor;margin-right:8px;margin-left:-2px;box-sizing:border-box;flex-shrink:0;display:none}.text{flex-grow:1;min-width:0}:host(:not([type])) .info,:host([type=success]) .success,:host([type=warning]) .warning,:host([type=error]) .error{display:block}::slotted(*){flex-shrink:0}::slotted(:is(svg[slot=start],s-icon[slot=start])){margin-right:8px;margin-left:-2px}::slotted(:is(svg[slot=end],s-icon[slot=end])){margin-right:-2px;margin-left:8px}::slotted(:is(svg,s-icon)){fill:currentColor;color:currentColor;width:24px;height:24px}::slotted(:is(s-button[slot=end],s-icon-button[slot=end])){margin-left:8px;margin-right:-8px;color:currentColor}::slotted(s-button[slot=end]){height:32px;padding:0 12px;border-radius:4px;font-size:.8125rem}::slotted(s-icon-button[slot=end]){width:32px;padding:5px}",
    vt =
      '<slot name="start"><svg viewBox="0 0 24 24" class="info"><path d="M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"></path></svg> <svg viewBox="0 0 24 24" class="success"><path d="M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"></path></svg> <svg viewBox="0 0 24 24" class="warning"><path d="M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"></path></svg> <svg viewBox="0 0 24 24" class="error"><path d="M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"></path></svg></slot><div class="text" part="text"><slot></slot></div><slot name="end"></slot>',
    te = class extends h({ style: xt, template: vt, props: ft }) {};
  te.define(gt);
  var bt = "s-appbar",
    yt =
      ":host{display:flex;align-items:center;position:relative;padding:0 8px;margin:0 auto;box-sizing:border-box;container-name:s-appbar;container-type:inline-size;background:var(--s-color-surface-container, #ECEEF0)}::slotted([slot=navigation]){margin-left:4px;flex-shrink:0}::slotted([slot=logo]){margin-left:12px;height:32px;color:var(--s-color-primary, #006782);fill:currentColor;flex-shrink:0}::slotted([slot=headline]){font-size:1.5rem;font-weight:700;overflow:hidden;text-transform:capitalize;text-overflow:ellipsis;white-space:nowrap;margin-left:12px;color:var(--s-color-primary, #006782)}.view{flex-grow:1;min-width:0;height:100%;display:flex;align-items:center;height:64px;max-height:100%;justify-content:flex-end}.view.s-laptop{height:56px}.view.s-tablet ::slotted(s-search[slot=search]){width:auto;flex-grow:1}::slotted([slot=action]){margin:0 4px;flex-shrink:0}::slotted(s-search[slot=search]){flex-shrink:0;margin:0 4px 0 8px}@container s-appbar (max-width: 1024px){.view{height:56px}}@container s-appbar (max-width: 768px){::slotted(s-search[slot=search]){width:auto;flex-grow:1}}",
    wt =
      '<slot name="start"></slot><slot name="navigation"></slot><slot name="logo"></slot><slot name="headline"></slot><div class="view" part="view"><slot></slot><slot name="search"></slot></div><slot name="action"></slot><slot name="end"></slot>',
    oe = class extends h({
      style: yt,
      template: wt,
      setup(t) {
        let e = t.querySelector(".view");
        P.CSSContainer ||
          new ResizeObserver(() => {
            e.classList.toggle("s-laptop", this.offsetWidth <= 1024),
              e.classList.toggle("s-tablet", this.offsetWidth <= 768);
          }).observe(this);
      },
    }) {};
  oe.define(bt);
  var kt = "s-avatar",
    Et = g({ $src: "" }),
    Ct =
      ":host{display:inline-flex;vertical-align:middle;justify-content:center;align-items:center;aspect-ratio:1;-webkit-aspect-ratio:1;position:relative;font-size:1rem;font-weight:600;width:40px;border-radius:50%;color:var(--s-color-on-tertiary, #ffffff);background:var(--s-color-tertiary, #5C5B7E)}::slotted(:is(svg,s-icon)){color:currentColor;fill:currentColor;width:24px}::slotted([slot=badge]){position:absolute;right:0;bottom:0;box-shadow:0 0 0 2px var(--s-color-surface, #F8F9FB);color:var(--s-color-on-success, #ffffff);background:var(--s-color-success, #006d43)}img{width:100%;height:100%;border-radius:inherit;position:absolute;inset:0}",
    qt = '<slot></slot><slot name="badge"></slot>',
    re = class extends h({
      style: Ct,
      template: qt,
      props: Et,
      setup(t) {
        let e = document.createElement("img");
        return {
          src: (r) => {
            (e.src = r),
              (e.onload = () => {
                this.dispatchEvent(new Event("load")),
                  t.insertBefore(e, t.children[0]);
              }),
              (e.onerror = () => {
                this.dispatchEvent(new ErrorEvent("error")),
                  e.isConnected && t.removeChild(e);
              });
          },
        };
      },
    }) {};
  re.define(kt);
  var St = "s-badge",
    $t =
      ":host{display:inline-flex;justify-content:center;align-items:center;width:8px;height:8px;border-radius:8px;font-size:.625rem;vertical-align:middle;box-sizing:border-box;background:var(--s-color-error, #BA1A1A);color:var(--s-color-on-error, #ffffff)}:host(:not(:empty)) .text{height:16px;padding:0 5px;display:flex;position:relative;justify-content:center;align-items:center;background:inherit;color:inherit;box-shadow:inherit;border-radius:8px}",
    zt = '<slot class="text" part="text"></slot>',
    se = class extends h({ style: $t, template: zt }) {};
  se.define(St);
  var k = (s) => {
    let t = s.trim().match(/^([\d\.]+)(s|ms)$/);
    if (!t) throw new Error();
    let e = Number(t[1]);
    return t[2] === "s" ? e * 1e3 : e;
  };
  var Tt = "s-bottom-sheet",
    Lt = g({ showed: !1, disabledGesture: !1 }),
    Ft = L({
      show: CustomEvent,
      showed: Event,
      close: CustomEvent,
      closed: Event,
    }),
    Mt =
      ':host{display:inline-block;vertical-align:middle}dialog{top:0;left:0;width:100%;height:100%;background:none;border:none;padding:0;max-width:none;max-height:none;outline:none;justify-content:center;align-items:flex-end;color:inherit;overflow:hidden}dialog::backdrop{background:none}dialog[open]{display:flex}.scrim{position:absolute;inset:0;width:100%;height:100%;opacity:0;backdrop-filter:saturate(180%) blur(2px)}.scrim:before{content:"";display:block;width:100%;height:100%;opacity:.75;background:var(--s-color-scrim, #000000)}dialog.show .scrim{opacity:1}.container{outline:none;position:relative;border-radius:24px 24px 0 0;width:100%;max-height:calc(100% - 56px);display:flex;flex-direction:column;padding-bottom:env(safe-area-inset-bottom);max-width:425px;box-shadow:var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));background:var(--s-color-surface-container-low, #F2F4F5)}.indicator{width:100%;display:flex;justify-content:center;align-items:center;height:18px;cursor:pointer;flex-shrink:0}.indicator:before{content:"";width:40px;height:4px;border-radius:2px;background:var(--s-color-outline, #70787D);opacity:.4}::slotted([slot=text]){padding:24px;line-height:22px}::slotted(:not([slot])){overscroll-behavior:none}@media (max-width: 768px){.container{max-width:768px}}',
    At =
      '<slot name="trigger"></slot><dialog part="popup"><div class="scrim" part="scrim"></div><div class="container" part="container"><div class="indicator" part="indicator"></div><slot name="text"></slot><slot id="view"></slot></div></dialog>',
    Pt = (s) => {
      let t = document.body,
        e = document.body.firstElementChild;
      e && e.tagName === "S-PAGE" && (t = e);
      let r = new V(),
        a = document.createElement("div");
      return (
        (a.slot = "text"),
        typeof s == "function" || s instanceof HTMLElement
          ? s instanceof HTMLElement
            ? r.appendChild(s)
            : s(r)
          : typeof s == "string"
          ? ((a.textContent = s), r.appendChild(a))
          : (s.root && (t = s.root),
            s.disabledGesture && (r.disabledGesture = s.disabledGesture),
            typeof s.view == "string" &&
              ((a.textContent = s.view), r.appendChild(a)),
            s.view instanceof HTMLElement && r.appendChild(s.view),
            typeof s.view == "function" && s.view(r)),
        r.addEventListener("closed", () => t.removeChild(r)),
        (r.showed = !0),
        t.appendChild(r),
        r
      );
    },
    V = class extends h({
      style: Mt,
      template: At,
      props: Lt,
      events: Ft,
      methods: { builder: Pt },
      setup(t) {
        let e = t.querySelector("dialog"),
          r = t.querySelector(".container"),
          a = t.querySelector(".scrim"),
          i = t.querySelector(".indicator"),
          l = getComputedStyle(this),
          n = null,
          d = () => {
            let m =
                l.getPropertyValue("--s-motion-easing-standard") ||
                "cubic-bezier(0.2, 0, 0, 1.0)",
              p = l.getPropertyValue("--s-motion-duration-medium4") || "400ms";
            return { easing: m, duration: k(p) };
          };
        (t.querySelector("#view").onslotchange = (m) => {
          n = m.target.assignedElements()[0] ?? null;
        }),
          (t.querySelector("slot[name=trigger]").onclick = () => {
            this.showed ||
              !this.dispatchEvent(
                new CustomEvent("show", {
                  cancelable: !0,
                  detail: { source: "TRIGGER" },
                })
              ) ||
              (this.showed = !0);
          });
        let c = (m) => {
          !this.showed ||
            !this.dispatchEvent(
              new CustomEvent("close", {
                cancelable: !0,
                detail: { source: m },
              })
            ) ||
            (this.showed = !1);
        };
        a.onclick = () => c("SCRIM");
        let o = null;
        r.addEventListener(
          "touchmove",
          (m) => {
            let p = m.target;
            if (this.disabledGesture) return;
            let u = m.touches[0];
            if (!o)
              return (o = {
                y: u.pageY,
                x: u.pageX,
                disabled: !1,
                top: 0,
                h: r.offsetHeight,
                now: Date.now(),
              });
            if (o.disabled) return;
            let y = u.pageY - o.y,
              v = u.pageX - o.x;
            if (
              ((o.top = Math.min(o.h, Math.max(0, y))),
              (p !== i && n && n.scrollTop > 0) || Math.abs(y) < Math.abs(v))
            )
              return (o.disabled = !0);
            r.style.transform = `translateY(${o.top}px)`;
          },
          { passive: !1 }
        ),
          (r.ontouchend = () => {
            if (!o || o.disabled) return (o = null);
            let m = Date.now() - o.now > 300 ? o.h / 3 : 20;
            if (o.top > m) {
              if (
                !this.dispatchEvent(
                  new CustomEvent("close", {
                    cancelable: !0,
                    detail: { source: "GESTURE" },
                  })
                )
              )
                return;
              this.showed = !1;
            } else
              r.animate(
                { transform: [r.style.transform, "translateY(0)"] },
                d()
              ),
                r.style.removeProperty("transform");
            o = null;
          });
        let f = () => {
            if (!this.isConnected || e.open) return;
            e.showModal(), e.classList.add("show");
            let m = d();
            a.animate({ opacity: [0, 1] }, m),
              r
                .animate(
                  {
                    transform: ["translateY(100%)", "translateY(0)"],
                    opacity: [0, 1],
                  },
                  m
                )
                .finished.then(() => this.dispatchEvent(new Event("showed")));
          },
          x = () => {
            if (!this.isConnected || !e.open) return;
            e.classList.remove("show");
            let m = d(),
              p = r.style.transform;
            a.animate({ opacity: [1, 0] }, m),
              r
                .animate(
                  {
                    transform: [
                      p === "" ? "translateY(0)" : p,
                      "translateY(100%)",
                    ],
                    opacity: [1, 0],
                  },
                  m
                )
                .finished.then(() => {
                  e.close(),
                    p && r.style.removeProperty("transform"),
                    this.dispatchEvent(new Event("closed"));
                });
          };
        return {
          onMounted: () => this.showed && !e.open && f(),
          showed: (m) => (m ? f() : x()),
        };
      },
    }) {};
  V.define(Tt);
  var E = {
    mobileS: matchMedia("(max-width: 320px)"),
    mobileM: matchMedia("(max-width: 375px)"),
    mobileL: matchMedia("(max-width: 425px)"),
    tablet: matchMedia("(max-width: 768px)"),
    laptop: matchMedia("(max-width: 1024px)"),
    laptopL: matchMedia("(max-width: 1440px)"),
    pointerCoarse: matchMedia("(pointer: coarse)"),
    pointerFine: matchMedia("(pointer: fine)"),
  };
  var Dt = "s-ripple",
    Zt = g({ centered: !1, attached: !1 }),
    Bt =
      ':host{display:inline-block;vertical-align:middle;position:relative;cursor:pointer}:host([attached=true]),.container,.container:before,.ripple{position:absolute;inset:0;width:100%;height:100%;pointer-events:none;border-radius:inherit}.container{overflow:hidden}.container:before{content:"";opacity:0;background:var(--ripple-color, currentColor);transition:opacity var(--s-motion-duration-short4, .1s) var(--s-motion-easing-standard, cubic-bezier(.2, 0, 0, 1))}.container.hover:before{opacity:var(--ripple-hover-opacity, .12)}.ripple{opacity:0;border-radius:50%;background:currentColor;filter:blur(12px) opacity(var(--ripple-opacity, .18))}',
    Nt =
      '<slot></slot><div class="container" part="container"><div class="ripple"></div></div>',
    z = class extends h({
      style: Bt,
      template: Nt,
      props: Zt,
      setup(t) {
        let e = t.querySelector(".container"),
          r = t.querySelector(".ripple"),
          a = getComputedStyle(this),
          i = () => {
            let m =
                a.getPropertyValue("--s-motion-easing-standard") ||
                "cubic-bezier(0.2, 0, 0, 1.0)",
              p = a.getPropertyValue("--s-motion-duration-long4") || "600ms",
              u = a.getPropertyValue("--s-motion-duration-short4") || "200ms";
            return { easing: m, duration: k(p), shortDuration: k(u) };
          },
          l = () => E.pointerFine.matches && e.classList.add("hover"),
          n = () => E.pointerFine.matches && e.classList.remove("hover"),
          d = { parentNode: null, pressed: !1 },
          c = (m) => {
            let { offsetWidth: p, offsetHeight: u } = this,
              y = Math.sqrt(p ** 2 + u ** 2),
              v = { x: "50%", y: "50%" };
            if (!this.centered) {
              let { left: F, top: Oe } = this.getBoundingClientRect(),
                ee = m.clientX - F,
                rt = m.clientY - Oe,
                st = u / 2,
                it = p / 2,
                ct = (Math.abs(st - rt) + st) * 2,
                dt = (Math.abs(it - ee) + it) * 2;
              (y = Math.sqrt(ct ** 2 + dt ** 2)),
                (v.x = `${ee}px`),
                (v.y = `${rt}px`);
            }
            let b = r,
              w = () => {};
            d.pressed
              ? ((b = r.cloneNode()), e.appendChild(b), (w = () => b.remove()))
              : ((d.pressed = !0), (w = () => (d.pressed = !1)));
            let q = d.parentNode ?? this,
              $ = i();
            q.setAttribute("pressed", "");
            let W = b.animate(
              {
                opacity: [1, 1],
                width: [`${y}px`, `${y}px`],
                height: [`${y}px`, `${y}px`],
                transform: [
                  "translate(-50%, -50%) scale(0)",
                  "translate(-50%, -50%) scale(1)",
                ],
                left: [v.x, v.x],
                top: [v.y, v.y],
              },
              { ...$, fill: "forwards" }
            );
            return () => {
              q.removeAttribute("pressed");
              let F = Number(W.currentTime),
                Oe = $.duration - $.shortDuration,
                ee = F > Oe ? $.shortDuration : $.duration - F;
              b.animate(
                { opacity: [1, 0] },
                { duration: ee, easing: $.easing, fill: "forwards" }
              ).finished.then(w);
            };
          },
          o = async (m) => {
            if (m.button !== 0) return;
            let p = {};
            if (m.pointerType === "mouse") {
              document.addEventListener("pointerup", c(m), { once: !0 });
              return;
            }
            let u;
            (p.timer = setTimeout(() => {
              (u = c(m)),
                document.removeEventListener("touchmove", y),
                p.upper && u();
            }, 50)),
              document.addEventListener(
                "touchend",
                () => {
                  if (!u) return (p.upper = !0);
                  u();
                },
                { once: !0 }
              );
            let y = () => clearTimeout(p.timer);
            document.addEventListener("touchmove", y, { once: !0 });
          },
          f = (m) => {
            m.addEventListener("mouseenter", l),
              m.addEventListener("mouseleave", n),
              m.addEventListener("wheel", n, { passive: !0 }),
              m.addEventListener("pointerdown", o);
          },
          x = () => {
            d.parentNode &&
              (d.parentNode.removeEventListener("mouseenter", l),
              d.parentNode.removeEventListener("mouseleave", n),
              d.parentNode.removeEventListener("wheel", n),
              d.parentNode.removeEventListener("pointerdown", o),
              (d.parentNode = null));
          };
        return (
          f(this),
          {
            onMounted: () => {
              this.attached &&
                this.parentNode &&
                ((d.parentNode =
                  this.parentNode instanceof ShadowRoot
                    ? this.parentNode.host
                    : this.parentNode),
                f(d.parentNode));
            },
            onUnmounted: () => this.attached && x(),
            attached: (m) => {
              if (!this.isConnected) return;
              if (!m) return x();
              let p =
                this.parentNode instanceof ShadowRoot
                  ? this.parentNode.host
                  : this.parentNode;
              f(p);
            },
          }
        );
      },
    }) {};
  z.define(Dt);
  var Ht = "s-button",
    jt = g({
      disabled: !1,
      type: ["filled", "elevated", "filled-tonal", "outlined", "text"],
    }),
    It =
      ":host{justify-content:center;align-items:center;box-sizing:border-box;display:inline-flex;vertical-align:middle;border-radius:20px;padding:0 24px;height:40px;text-transform:capitalize;position:relative;cursor:pointer;font-size:.875rem;font-weight:500;max-width:-moz-available;max-width:-webkit-fill-available;background:var(--s-color-primary, #006782);color:var(--s-color-on-primary, #ffffff);transition:box-shadow var(--s-motion-duration-short4, .2s) var(--s-motion-easing-standard, cubic-bezier(.2, 0, 0, 1));overflow:hidden}:host([disabled=true]){pointer-events:none!important;background:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 12%,transparent)!important;color:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 38%,transparent)!important}:host([type=elevated]){background:var(--s-color-surface-container-low, #F2F4F5);color:var(--s-color-primary, #006782);box-shadow:var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12))}:host([type=elevated][disabled=true]){box-shadow:none!important}:host([type=filled-tonal]){background:var(--s-color-secondary-container, #CFE6F1);color:var(--s-color-on-secondary-container, #354A53)}:host([type=outlined]){border:solid 1px var(--s-color-outline, #70787D);background:none;color:var(--s-color-primary, #006782)}:host([type=outlined][disabled=true]){background:none!important;border-color:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 12%,transparent)!important}:host([type=text]){background:none;color:var(--s-color-primary, #006782);padding:0 16px}:host([type=text][disabled=true]){background:none!important}::slotted(*){flex-shrink:0}::slotted(:is(svg,s-icon,s-circular-progress)){fill:currentColor;color:currentColor;width:20px;height:20px}::slotted(:is(svg[slot=start],s-icon[slot=start])){margin-right:4px;margin-left:-8px}::slotted(:is(svg[slot=end],s-icon[slot=end])){margin-right:-8px;margin-left:4px}::slotted(s-circular-progress[slot=start]){margin-left:-8px;margin-right:8px}::slotted(s-circular-progress[slot=end]){margin-left:8px;margin-right:-8px}:host([type=text]) ::slotted(:is(s-icon[slot=start],svg[slot=start])){margin-left:-4px;margin-right:4px}:host([type=text]) ::slotted(:is(s-icon[slot=end],svg[slot=end])){margin-left:4px;margin-right:-4px}:host(:not([type])[pressed]){box-shadow:var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12))}:host([type=elevated][pressed]){box-shadow:var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12))}.text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;min-width:0}@media (pointer: fine){:host(:not([type]):hover){box-shadow:var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12))}:host([type=elevated]:hover){box-shadow:var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12))}}@supports not (color: color-mix(in srgb,black,white)){:host([disabled=true]){background:var(--s-color-surface-container-high, #E7E8EA)!important;color:var(--s-color-outline, #70787D)!important}:host([type=outlined][disabled=true]){border-color:var(--s-color-surface-container-highest, #E1E3E4)!important}}",
    Wt =
      '<slot name="start"></slot><div class="text" part="text"><slot></slot></div><slot name="end"></slot><s-ripple class="ripple" attached="true" part="ripple"></s-ripple>',
    ie = class extends h({ style: It, template: Wt, props: jt }) {};
  ie.define(Ht);
  var Vt = "s-card",
    Yt = g({ type: ["elevated", "filled", "outlined"], clickable: !1 }),
    Rt =
      ":host{display:inline-block;vertical-align:middle;border-radius:12px;position:relative;font-size:.875rem;box-sizing:border-box;max-width:280px;overflow:hidden;color:var(--s-color-on-surface, #191C1E);background:var(--s-color-surface-container-low, #F2F4F5);box-shadow:var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12))}:host([type=filled]){box-shadow:none;background:var(--s-color-surface-container-highest, #E1E3E4)}:host([type=outlined]){box-shadow:none;background:var(--s-color-surface, #F8F9FB);border:solid 1px var(--s-color-outline-variant, #C0C8CC)}:host([clickable=true]){cursor:pointer;transition:box-shadow var(--s-motion-duration-short4, .2s) var(--s-motion-easing-standard, cubic-bezier(.2, 0, 0, 1))}:host([clickable=true]) .ripple{display:block}.action{display:flex;justify-content:flex-end;gap:8px;padding:0 16px}.ripple{display:none;border-radius:0}::slotted([slot=image]){display:block;max-height:160px;min-height:96px;width:100%;object-fit:cover;background:var(--s-color-surface-container, #ECEEF0)}::slotted([slot=headline]){font-size:1.375rem;line-height:22px;margin:12px 16px}::slotted([slot=subhead]){font-size:1rem;margin:-8px 16px 12px}::slotted([slot=text]){line-height:22px;margin:12px 16px;color:var(--s-color-on-surface-variant, #40484C)}::slotted(s-button[slot=action]){margin-bottom:16px}::slotted([slot=headline]+[slot=subhead]){background:red}@media (pointer: fine){:host([clickable=true][type=filled]:hover),:host([clickable=true][type=outlined]:hover){box-shadow:var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12))}:host([clickable=true]:hover){box-shadow:var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12))}}",
    _t =
      '<slot name="start"></slot><slot name="image"></slot><slot name="headline"></slot><slot name="subhead"></slot><slot name="text"></slot><slot></slot><div class="action" part="action"><slot name="action"></slot></div><slot name="end"></slot><s-ripple class="ripple" attached="true" part="ripple"></s-ripple>',
    ae = class extends h({
      style: Rt,
      template: _t,
      props: Yt,
      setup(t) {
        let e = t.querySelector("slot[name=action]");
        e.onpointerdown = (r) => r.stopPropagation();
      },
    }) {};
  ae.define(Vt);
  var S = class {
    list = [];
    select;
    selectValue;
    flag = !1;
    constructor(t) {
      let { context: e } = t;
      e.addEventListener(`${e.tagName.toLocaleLowerCase()}:select`, (r) => {
        if ((r.stopPropagation(), !(r.target instanceof t.class))) return;
        let a;
        (this.flag = !0),
          (r.target.selected = !0),
          this.list.forEach((i) => {
            i !== r.target && (i.selected && (a = i), (i.selected = !1));
          }),
          (this.select = r.target),
          (this.flag = !1),
          e.dispatchEvent(new Event("change")),
          this.onUpdate?.(a),
          this.onSelect?.();
      }),
        e.addEventListener(`${e.tagName.toLocaleLowerCase()}:update`, (r) => {
          if (
            (r.stopPropagation(),
            this.flag ||
              this.list.length === 0 ||
              !(r.target instanceof t.class))
          )
            return;
          this.flag = !0;
          let a;
          r.target.selected
            ? ((this.select = r.target),
              this.list.forEach((i) => {
                i !== r.target && (i.selected && (a = i), (i.selected = !1));
              }))
            : delete this.select,
            (this.flag = !1),
            this.onUpdate?.(a);
        }),
        t.slot.addEventListener("slotchange", () => {
          (this.flag = !0),
            delete this.select,
            (this.list = t.slot.assignedElements().filter((r) => {
              if (r instanceof t.class) {
                if (this.selectValue !== void 0)
                  r.value === this.selectValue
                    ? ((this.select = r), (r.selected = !0))
                    : (r.selected = !1);
                else {
                  if (!this.select && r.selected) return (this.select = r), !0;
                  this.select && (r.selected = !1);
                }
                return !0;
              }
            })),
            (this.flag = !1),
            this.onSlotChange?.(),
            this.onUpdate?.();
        });
    }
    get value() {
      return this.list[this.list.indexOf(this.select)]?.value ?? "";
    }
    set value(t) {
      (this.selectValue = t),
        this.list.length !== 0 &&
          ((this.flag = !0),
          this.list.forEach((e) => {
            if (e.value === t) {
              (e.selected = !0), (this.select = e);
              return;
            }
            e.selected = !1;
          }),
          this.onUpdate?.(),
          (this.flag = !1));
    }
    get selectedIndex() {
      return this.list.indexOf(this.select);
    }
  };
  var ne = "s-carousel",
    Ot = g({ $value: "", $autoplay: !1, $duration: 4e3 }),
    Xt =
      ":host{display:flex;align-items:center;position:relative;overflow:hidden;border-radius:8px;cursor:pointer;aspect-ratio:2;-webkit-aspect-ratio:2}.container{display:flex;justify-content:flex-start;height:100%;min-width:100%;transition:transform var(--s-motion-duration-long4, .6s) var(--s-motion-easing-standard, cubic-bezier(.2, 0, 0, 1))}.track{position:absolute;bottom:0;left:0;width:100%;display:flex;gap:8px;align-items:center;justify-content:center;pointer-events:none;padding:12px 0}.track .indicator{width:8px;height:8px;border-radius:4px;background:#fff;opacity:.3;flex-shrink:0;cursor:pointer;pointer-events:auto;box-shadow:var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12))}.track .indicator.checked{opacity:1}",
    Gt =
      '<div class="container" part="container"><slot></slot></div><div class="track"></div>',
    Y = class extends h({
      style: Xt,
      template: Gt,
      props: Ot,
      setup(t) {
        let e = t.querySelector(".container"),
          r = t.querySelector(".track"),
          a = t.querySelector("slot"),
          i = new S({ context: this, class: R, slot: a }),
          l = -1;
        i.onUpdate = () => {
          r.childNodes.forEach((c) => c.classList.remove("checked")),
            (e.style.transform = `translateX(${-i.selectedIndex * 100}%)`),
            i.selectedIndex !== -1 &&
              (r.childNodes[i.selectedIndex].classList.add("checked"), n());
        };
        let n = () => {
            !this.autoplay ||
              i.list.length === 0 ||
              !this.isConnected ||
              (d(),
              (l = setTimeout(() => {
                let c = i.selectedIndex + 1;
                c >= i.list.length && (c = 0),
                  (i.list[c].selected = !0),
                  this.dispatchEvent(new Event("change"));
              }, this.duration)));
          },
          d = () => clearInterval(l);
        return (
          (i.onSlotChange = () => {
            r.innerHTML = "";
            let c = document.createDocumentFragment();
            i.list.forEach((o) => {
              let f = document.createElement("div");
              (f.className = "indicator"),
                f.addEventListener("click", () =>
                  o.dispatchEvent(new Event(`${ne}:select`, { bubbles: !0 }))
                ),
                c.appendChild(f);
            }),
              r.appendChild(c);
          }),
          (e.onpointerdown = (c) => {
            if (i.list.length <= 1) return;
            d();
            let o = c.pageX,
              f = c.pageY,
              x = e.offsetWidth,
              m = i.list[i.selectedIndex - 1],
              p = i.list[i.selectedIndex + 1],
              u = { now: 0, left: 0, next: void 0 },
              y = (w) => {
                let q = w instanceof TouchEvent ? w.touches[0] : w,
                  $ = q.pageX - o,
                  W = q.pageY - f;
                if (
                  w instanceof TouchEvent &&
                  Math.abs($) < Math.abs(W) &&
                  !u.next
                )
                  return v();
                if (
                  ((u.left = $),
                  u.now === 0 && (u.now = Date.now()),
                  m && (u.left = Math.min(u.left, x)),
                  p && (u.left = Math.max(u.left, x * -1)),
                  ((!m && u.left > 0) || (!p && u.left < 0)) &&
                    (u.left = u.left * 0.2),
                  (u.left < 0 && p) || (u.left > 0 && m))
                ) {
                  let F = (Math.abs(u.left) / x) * 0.05;
                  (i.select.style.transition = "none"),
                    (i.select.style.transform = `scale(${0.05 - F + 0.95})`),
                    (u.next = u.left < 0 ? p : m),
                    (u.next.style.transition = "none"),
                    (u.next.style.transform = `scale(${F + 0.95})`);
                }
                (e.style.transition = "none"),
                  (e.style.pointerEvents = "none"),
                  (e.style.transform = `translateX(calc(${
                    -i.selectedIndex * 100
                  }% + ${u.left}px))`),
                  w.cancelable && w.preventDefault();
              },
              v = () => {
                document.removeEventListener(b.up, v),
                  document.removeEventListener(b.move, y),
                  e.style.removeProperty("pointer-events"),
                  e.style.removeProperty("transition"),
                  i.select.style.removeProperty("transition"),
                  i.select.style.removeProperty("transform"),
                  u.next?.style.removeProperty("transition"),
                  u.next?.style.removeProperty("transform");
                let w = i.selectedIndex;
                if (
                  !(
                    (w === 0 && u.left > 0) ||
                    (w === i.list.length - 1 && u.left < 0)
                  )
                ) {
                  let q = Date.now() - u.now > 300 ? x / 2 : 20;
                  if (Math.abs(u.left) > q) {
                    u.next?.dispatchEvent(
                      new Event(`${ne}:select`, { bubbles: !0 })
                    );
                    return;
                  }
                }
                (e.style.transform = `translateX(${-i.selectedIndex * 100}%)`),
                  n();
              },
              b = {
                move: E.pointerCoarse.matches ? "touchmove" : "pointermove",
                up: E.pointerCoarse.matches ? "touchend" : "pointerup",
              };
            document.addEventListener(b.move, y, { passive: !1 }),
              document.addEventListener(b.up, v);
          }),
          {
            expose: {
              get options() {
                return i.list;
              },
              get selectedIndex() {
                return i.selectedIndex;
              },
              togglePrevious: () => {
                let c = i.list[i.selectedIndex - 1];
                c && (c.selected = !0);
              },
              toggleNext: () => {
                let c = i.list[i.selectedIndex + 1];
                c && (c.selected = !0);
              },
            },
            onMounted: n,
            onUnmounted: d,
            value: {
              get: () => i.value,
              set: (c) => {
                (i.value = c), n();
              },
            },
            autoplay: n,
          }
        );
      },
    }) {},
    Ut = "s-carousel-item",
    Qt = g({ selected: !1, $value: "" }),
    Jt =
      ":host{user-drag:none;-webkit-user-drag:none;flex-shrink:0;width:100%;height:100%;border-radius:8px;background:var(--s-color-surface-container-high, #E7E8EA);transform:scale(.95);transition:transform var(--s-motion-duration-long4, .6s) var(--s-motion-easing-standard, cubic-bezier(.2, 0, 0, 1));background-repeat:round}:host([selected=true]){transform:scale(1)}",
    Kt = "<slot></slot>",
    R = class extends h({
      style: Jt,
      template: Kt,
      props: Qt,
      setup() {
        return {
          selected: () => {
            this.parentNode instanceof Y &&
              this.dispatchEvent(new Event(`${ne}:update`, { bubbles: !0 }));
          },
        };
      },
    }) {};
  Y.define(ne), R.define(Ut);
  var eo = "s-checkbox",
    to = g({ disabled: !1, checked: !1, indeterminate: !1 }),
    oo =
      ":host{display:inline-flex;align-items:center;vertical-align:middle;cursor:pointer;position:relative;height:40px;color:var(--s-color-on-surface-variant, #40484C)}:host([checked=true]){color:var(--s-color-primary, #006782)}:host([disabled=true]){pointer-events:none}.container{position:relative;height:100%;aspect-ratio:1;-webkit-aspect-ratio:1;border-radius:50%;overflow:hidden;flex-shrink:0}:host([disabled=true]) .container{color:var(--s-color-on-surface, #191C1E)!important;opacity:.38!important}.unchecked,.checked,.indeterminate{display:flex;align-items:center;justify-content:center;position:absolute;inset:0;width:100%;height:100%}.checked,.indeterminate{position:absolute;transform:scale(.5);opacity:0;transition-property:transform,opacity;transition-timing-function:var(--s-motion-easing-emphasized, cubic-bezier(.2, 0, 0, 1));transition-duration:var(--s-motion-duration-short4, .2s)}:host([indeterminate=true]) .unchecked{opacity:0}:host([checked=true]:not([indeterminate=true])) .checked,:host([indeterminate=true]) .indeterminate{opacity:1;transform:scale(1)}.ripple{aspect-ratio:1;-webkit-aspect-ratio:1;height:100%;width:auto;border-radius:50%}svg,::slotted(:is([slot=checked],[slot=unchecked],[slot=indeterminate])){color:currentColor;fill:currentColor;width:60%;height:60%}",
    ro =
      '<div class="container" part="container"><slot class="unchecked" name="unchecked"><svg viewBox="0 -960 960 960"><path d="M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q33 0 56.5 23.5T840-760v560q0 33-23.5 56.5T760-120H200Zm0-80h560v-560H200v560Z"></path></svg></slot><slot class="checked" name="checked"><svg viewBox="0 -960 960 960"><path d="m424-312 282-282-56-56-226 226-114-114-56 56 170 170ZM200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q33 0 56.5 23.5T840-760v560q0 33-23.5 56.5T760-120H200Z"></path></svg></slot><slot class="indeterminate" name="indeterminate"><svg viewBox="0 -960 960 960"><path d="M280-440h400v-80H280v80Zm-80 320q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q33 0 56.5 23.5T840-760v560q0 33-23.5 56.5T760-120H200Z"></path></svg></slot></div><slot></slot><s-ripple class="ripple" attached="true" part="ripple"></s-ripple>',
    le = class extends h({
      style: oo,
      template: ro,
      props: to,
      setup() {
        this.addEventListener("click", () => {
          this.indeterminate && (this.indeterminate = !1),
            (this.checked = !this.checked),
            this.dispatchEvent(new Event("change"));
        });
      },
    }) {};
  le.define(eo);
  var so = "s-chip",
    io = g({
      type: ["filled", "outlined"],
      $value: "",
      checked: !1,
      disabled: !1,
      clickable: !1,
    }),
    ao =
      ":host{display:inline-flex;align-items:center;vertical-align:middle;padding:0 16px;height:32px;border-radius:16px;box-sizing:border-box;font-size:.8125rem;font-weight:500;position:relative;cursor:pointer;overflow:hidden;background:var(--s-color-surface-container-high, #E7E8EA);color:var(--s-color-on-surface, #191C1E);transition-property:color,background-color,box-shadow;transition-timing-function:var(--s-motion-easing-standard, cubic-bezier(.2, 0, 0, 1));transition-duration:var(--s-motion-duration-short4, .2s)}:host([disabled=true]){pointer-events:none!important;border-color:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 12%,transparent)!important;color:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 38%,transparent)!important;background:color-mix(in srgb,var(--s-color-surface-container-high, #E7E8EA) 38%,transparent)!important}:host([checked=true]){border:none;background:var(--s-color-secondary-container, #CFE6F1);color:var(--s-color-primary, #006782)}:host([type=outlined]){background:none;border:solid 1px var(--s-color-outline-variant, #C0C8CC)}:host([type=outlined][checked=true]){border-color:var(--s-color-primary, #006782)}::slotted(:is(s-icon,svg)){width:18px;height:18px;flex-shrink:0;fill:currentColor;color:currentColor}::slotted(:is(s-icon[slot=start],svg[slot=start])){margin-left:-8px;margin-right:8px}::slotted(:is(s-icon[slot=end],svg[slot=end])){margin-left:8px;margin-right:-8px}::slotted(s-avatar){width:24px;height:24px;font-size:.75rem}::slotted(s-avatar[slot=start]){margin-left:-12px;margin-right:8px}::slotted(s-icon-button[slot=action]){margin:0 -12px 0 8px;width:24px;height:24px;padding:3px;color:currentColor}.text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;min-width:0}:host(:not([clickable=true])) .ripple{display:none}@supports not (color: color-mix()){:host([disabled=true]){background:var(--s-color-surface-container-high, #E7E8EA)!important;color:var(--s-color-outline, #70787D)!important;border-color:var(--s-color-surface-container-highest, #E1E3E4)!important}}",
    no =
      '<slot name="start"></slot><div class="text" part="text"><slot></slot></div><slot name="end"></slot><slot name="action"></slot><s-ripple class="ripple" attached="true" part="ripple"></s-ripple>',
    ce = class extends h({
      style: ao,
      template: no,
      props: io,
      setup(t) {
        let e = t.querySelector("slot[name=action]");
        (e.onclick = (r) => r.stopPropagation()),
          (e.onpointerdown = (r) => r.stopPropagation()),
          this.addEventListener("click", () => {
            this.clickable &&
              ((this.checked = !this.checked),
              this.dispatchEvent(new Event("change")));
          });
      },
    }) {};
  ce.define(so);
  var lo = "s-circular-progress",
    co = g({ indeterminate: !1, animated: !1, $max: 100, $value: 0 }),
    po =
      ":host{display:inline-block;vertical-align:middle;position:relative;width:48px;aspect-ratio:1;-webkit-aspect-ratio:1;color:var(--s-color-primary, #006782)}:host([animated=true]) .known .block{transition-duration:var(--s-motion-duration-medium4, .4s);transition-timing-function:var(--s-motion-easing-emphasized, cubic-bezier(.2, 0, 0, 1));transition-name:stroke-dashoffset,transform}:host([indeterminate=true]) .known,.unknown{display:none}:host([indeterminate=true]) .unknown,.known{display:block}.container{width:100%;height:100%;border-radius:inherit;position:relative}svg{height:inherit;width:inherit;stroke:currentColor}circle{stroke-linecap:round;fill:none;stroke-dasharray:var(--dasharray)}.track{stroke:var(--s-color-secondary-container, #CFE6F1)}.unknown{animation:rotate 1568ms linear infinite}@keyframes stroke{0%{stroke-dashoffset:var(--dasharray)}50%{stroke-dashoffset:calc(var(--dasharray) / 4)}to{stroke-dashoffset:var(--dasharray)}}@keyframes stroke-rotate{0%{transform:rotate(0)}12.5%{transform:rotate(0)}25%{transform:rotate(270deg)}37.5%{transform:rotate(270deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(540deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(810deg)}to{transform:rotate(1080deg)}to{transform:rotate(1080deg)}}@keyframes rotate{0%{transform:rotate(0)}to{transform:rotate(360deg)}}",
    C = 48,
    M = 4,
    A = (C - M) * Math.PI,
    ho = `<div class="container known"><svg viewBox="0 0 48 48" style="transform: rotate(-90deg);--dasharray: ${A}px;"><circle class="track block" cx="${
      C / 2
    }" cy="${C / 2}" r="${
      (C - M) / 2
    }" style="stroke-width: ${M}px"/><circle class="indicator block" cx="${
      C / 2
    }" cy="${C / 2}" r="${
      (C - M) / 2
    }" style="stroke-dashoffset: ${A}px;stroke-width: ${M}px"/></svg></div><div class="container unknown"><svg viewBox="0 0 48 48" style="animation: stroke-rotate 5.2s ease-in-out infinite;--dasharray: ${A}px;"><circle transform="rotate(-90, ${
      C / 2
    }, ${C / 2})" cx="${C / 2}" cy="${C / 2}" r=" ${
      (C - M) / 2
    }" style="animation: stroke 1.3s ease-in-out infinite;stroke-width: ${M}px"></circle></svg></div>`,
    de = class extends h({
      style: po,
      template: ho,
      props: co,
      setup(t) {
        let e = t.querySelector(".known .track"),
          r = t.querySelector(".known .indicator"),
          a = () => {
            let i = (Math.min(this.value, this.max) / this.max) * 100,
              l = A - A * (i / 100),
              n = (i / 100) * 360;
            (e.style.strokeDashoffset = `${
              i === 0 ? 0 : Math.min(A + 16 - l, A)
            }px`),
              e.setAttribute(
                "transform",
                `rotate(${n + 20}, ${C / 2}, ${C / 2})`
              ),
              (r.style.strokeDashoffset = `${l}px`);
          };
        return { max: a, value: a };
      },
    }) {};
  de.define(lo);
  var D = (s, t = "yyyy-MM-dd") => {
    typeof s == "string" && (s = new Date(s));
    let e = s.getFullYear(),
      r = s.getMonth() + 1,
      a = s.getDate();
    return t
      .replace("yyyy", e.toString())
      .replace("MM", r.toString().padStart(2, "0"))
      .replace("dd", a.toString().padStart(2, "0"));
  };
  var pe = class {
    list;
    locale = navigator.language;
    updates = new Map();
    constructor(t) {
      this.list = t;
    }
    getItem(t) {
      if (((t = t || this.locale), t in this.list)) return this.list[t];
      let [e] = t.split("-");
      return e in this.list ? this.list[e] : this.list.zh;
    }
    addItem(t, e) {
      if (this.list[t]) throw new Error(`Locale ${t} already exists`);
      this.list[t] = e;
    }
    setLocale(t) {
      (this.locale = t ?? navigator.language), this.updates.forEach((e) => e());
    }
  };
  var T = new pe({});
  T.list = {
    zh: {
      display: (s) =>
        `${s.getFullYear()}\u5E74${
          s.getMonth() + 1
        }\u6708${s.getDate()}\u65E5 \u661F\u671F${
          T.list.zh.displayWeeks[s.getDay()]
        }`,
      displayMonth: (s) => `${s.getFullYear()}\u5E74`,
      displayWeeks: [
        "\u65E5",
        "\u4E00",
        "\u4E8C",
        "\u4E09",
        "\u56DB",
        "\u4E94",
        "\u516D",
      ],
    },
    en: {
      display: (s) =>
        `${
          ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"][s.getDay()]
        }, Jan ${s.getDate()}`,
      displayMonth: (s) =>
        `${
          [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ][s.getMonth()]
        } ${s.getFullYear()}`,
      displayWeeks: ["S", "M", "T", "W", "T", "F", "S"],
    },
  };
  var uo = "s-date",
    mo = g({ $value: "", $locale: "", $max: "2099-12-31", $min: "1900-01-01" }),
    go =
      ":host{display:inline-block;vertical-align:middle;border-radius:8px;font-size:.875rem;max-width:360px;overflow:hidden;box-sizing:border-box;border:solid 1px var(--s-color-surface-variant, #DCE4E8);background:var(--s-color-surface-container-low, #F2F4F5);color:var(--s-color-on-surface, #191C1E)}.button,.icon-button{display:flex;justify-content:center;align-items:center;height:36px;box-sizing:border-box;font-size:.8125rem;color:var(--s-color-on-surface-variant, #40484C)}.icon-button{width:36px;border-radius:50%}.button{border-radius:18px;height:36px;padding:0 12px}svg{width:24px;fill:currentColor;box-sizing:border-box}.header{padding:24px 24px 16px;font-size:1.25rem;border-bottom:solid 1px var(--s-color-surface-variant, #DCE4E8);background:var(--s-color-surface-container, #ECEEF0)}.container{display:flex;flex-direction:column;position:relative}.action{display:flex;align-items:center;justify-content:space-between;padding:12px 16px}.action>.year>svg{margin:0 -8px 0 2px;padding:1px}.action>.toggle{display:flex}.years{display:flex;flex-wrap:wrap;overflow:auto;gap:4px;column-gap:6px;padding:0 16px 16px;margin-top:-12px;max-height:280px;counter-reset:year-counter 1899}.years>.item{counter-increment:year-counter;flex-grow:1}.years>.item:before{content:counter(year-counter)}.weeks{display:flex;padding:0 16px;font-size:.8125rem;color:var(--s-color-outline, #70787D)}.weeks>.item,.days>.item{width:calc(100% / 7);display:inline-flex;justify-content:center}.days{padding:16px;display:flex;flex-wrap:wrap}.days>.overflow~.item{display:none}.days>.item>s-ripple{margin:2px}.days>.checked>s-ripple,.years>.checked{pointer-events:none;background:var(--s-color-primary, #006782);color:var(--s-color-on-primary, #ffffff)}.container:not(.show-years) .years,.show-years :is(.weeks,.days,.action>.toggle){display:none}",
    Z = { years: [], weeks: [], days: [] };
  for (let s = 0; s < 200; s++)
    s < 7 && Z.weeks.push('<div class="item"></div>'),
      s < 31 &&
        Z.days.push(
          `<div class="item"><s-ripple class="icon-button">${
            s + 1
          }</s-ripple></div>`
        ),
      Z.years.push('<s-ripple class="button item"></s-ripple>');
  var fo = `<div class="header" part="header"><slot name="headline"></slot><span></span></div><div class="container" part="container"><div class="action"><s-ripple class="button year" slot="trigger"><span></span> <svg viewBox="0 -960 960 960"><path d="M480-360 280-560h400L480-360Z"></path></svg></s-ripple><div class="toggle"><s-ripple class="icon-button prev" part="prev-button"><svg viewBox="0 -960 960 960"><path d="M560-240 320-480l240-240 56 56-184 184 184 184-56 56Z"></path></svg></s-ripple><s-ripple class="icon-button next" part="next-button"><svg viewBox="0 -960 960 960"><path d="M504-480 320-664l56-56 240 240-240 240-56-56 184-184Z"></path></svg></s-ripple></div></div><s-scroll-view class="years">${Z.years.join(
      ""
    )}</s-scroll-view><div class="weeks">${Z.weeks.join(
      ""
    )}</div><div class="days">${Z.days.join("")}</div></div>`,
    Xe = class {
      yearSelect;
      daySelect;
      dayOverflow;
      date;
      min;
      max;
      constructor(t, e, r) {
        (this.date = typeof t == "string" ? new Date(t) : t),
          (this.min = new Date(e)),
          (this.max = new Date(r));
      }
    },
    at = (s, t) => {
      let e = new Date(s, t + 1, 1);
      return e.setDate(e.getDate() - 1), e.getDate();
    },
    xo = (s, t) => {
      T.addItem(s, t);
    },
    vo = (s) => {
      T.setLocale(s);
    },
    he = class extends h({
      style: go,
      template: fo,
      props: mo,
      methods: { addLocale: xo, setLocale: vo },
      setup(t) {
        let e = t.querySelector(".container"),
          r = t.querySelector(".header>span"),
          a = t.querySelector(".action>.year"),
          i = t.querySelector(".action>.toggle>.prev"),
          l = t.querySelector(".action>.toggle>.next"),
          n = t.querySelector(".years"),
          d = t.querySelector(".weeks"),
          c = t.querySelector(".days"),
          o = new Xe(this.value || new Date(), this.min, this.max),
          f = () => {
            let v = T.getItem(this.locale).display;
            r.textContent = v(o.date);
            let b = T.getItem(this.locale).displayMonth;
            a.children[0].textContent = b(o.date);
          },
          x = () => {
            let v = T.getItem(this.locale).displayWeeks;
            d.childNodes.forEach((b, w) => (b.textContent = v[w]));
          },
          m = () => {
            let v = new Date(
              o.date.getFullYear(),
              o.date.getMonth(),
              1
            ).getDay();
            c.children[0].setAttribute(
              "style",
              `margin-left: calc((100% / 7) * ${v})`
            );
            let b = new Date(
              o.date.getFullYear(),
              o.date.getMonth() + 1,
              0
            ).getDate();
            o.dayOverflow?.classList.remove("overflow"),
              (o.dayOverflow = c.children[b - 1]),
              o.dayOverflow.classList.add("overflow"),
              o.yearSelect?.classList.remove("checked"),
              (o.yearSelect =
                n.children[o.date.getFullYear() - o.min.getFullYear()]),
              o.yearSelect.classList.add("checked"),
              o.daySelect?.classList.remove("checked"),
              (o.daySelect = c.children[o.date.getDate() - 1]),
              o.daySelect.classList.add("checked"),
              e.style.removeProperty("height");
          },
          p = () => {
            let v = o.max.getFullYear() - o.min.getFullYear();
            (n.innerHTML = ""),
              (n.style.counterReset = `year-counter ${
                o.min.getFullYear() - 1
              }`);
            let b = document.createDocumentFragment();
            for (let w = 0; w <= v; w++) {
              let q = new z();
              q.classList.add("button", "item"), b.appendChild(q);
            }
            n.appendChild(b), m();
          },
          u = (v, b, w) => {
            (this.value = D(new Date(v, b, w))),
              this.dispatchEvent(new Event("change"));
          };
        (a.onclick = () => {
          let v = e.offsetHeight;
          if (
            (e.classList.toggle("show-years"),
            e.classList.contains("show-years"))
          ) {
            (e.style.height = `${v}px`),
              o.yearSelect &&
                n.scrollTo({
                  top:
                    o.yearSelect.offsetTop -
                    n.offsetHeight / 2 +
                    o.yearSelect.offsetHeight / 2,
                });
            return;
          }
        }),
          (i.onclick = () => {
            let v = at(o.date.getFullYear(), o.date.getMonth() - 1),
              b = Math.min(o.date.getDate(), v);
            u(o.date.getFullYear(), o.date.getMonth() - 1, b);
          }),
          (l.onclick = () => {
            let v = at(o.date.getFullYear(), o.date.getMonth() + 1),
              b = Math.min(o.date.getDate(), v);
            u(o.date.getFullYear(), o.date.getMonth() + 1, b);
          }),
          (n.onclick = (v) => {
            if (!(v.target instanceof z)) return;
            e.classList.remove("show-years");
            let b =
              Array.from(n.children).indexOf(v.target) + o.min.getFullYear();
            u(b, o.date.getMonth(), o.date.getDate());
          }),
          (c.onclick = (v) => {
            if (!(v.target instanceof z)) return;
            let b = Array.from(c.children).indexOf(v.target.parentElement) + 1;
            u(o.date.getFullYear(), o.date.getMonth(), b);
          });
        let y = () => {
          f(), x();
        };
        return (
          m(),
          y(),
          {
            onMounted: () => T.updates.set(this, y),
            onUnmounted: () => T.updates.delete(this),
            min: (v) => {
              let b = new Date(v);
              if (isNaN(b.getTime()) || b.getTime() > o.date.getTime())
                throw Error("invalid min date");
              (o.min = b), p();
            },
            max: (v) => {
              let b = new Date(v);
              if (isNaN(b.getTime()) || b.getTime() < o.date.getTime())
                throw Error("invalid max date");
              (o.max = b), p();
            },
            value: {
              get: () => D(o.date),
              set: (v) => {
                let b = new Date(v);
                if (
                  isNaN(b.getTime()) ||
                  b.getTime() < o.min.getTime() ||
                  b.getTime() > o.max.getTime()
                )
                  throw Error("invalid date");
                (o.date = b), f(), m();
              },
            },
            locale: y,
          }
        );
      },
    }) {};
  he.define(uo);
  var bo = "s-date-picker",
    Ge = g({
      $value: "",
      $min: "",
      $max: "",
      $label: "",
      $positiveText: "\u786E\u5B9A",
      $negativeText: "\u53D6\u6D88",
      $format: "yyyy-MM-dd",
      $locale: "",
    }),
    yo =
      ":host{display:inline-block;vertical-align:middle;font-size:.875rem;--date-picker-border-radius: 4px;--date-picker-border-color: var(--s-color-outline, #70787D);--date-picker-border-width: 1px;--date-picker-padding: 16px;--date-picker-height: 48px}s-dialog{display:block}.field{--field-border-radius: var(--date-picker-border-radius);--field-border-color: var(--date-picker-border-color);--field-border-width: var(--date-picker-border-width);--field-padding: var(--date-picker-padding);height:var(--date-picker-height);position:relative;cursor:pointer}.view{width:100%;padding-top:0;padding-bottom:0;padding:0 var(--date-picker-padding)}svg{width:24px;height:24px;padding:2px;box-sizing:border-box;flex-shrink:0;margin-left:min(0px,calc((var(--date-picker-padding) * -1) + 12px));margin-right:max(0px,calc(var(--date-picker-padding) - 4px));fill:var(--s-color-on-surface-variant, #40484C)}.ripple{border-radius:var(--date-picker-border-radius)}.date{border:none;width:360px;border-radius:0}.positive,.negative{border-radius:20px}",
    wo = `<s-dialog part="dialog"><slot name="trigger" slot="trigger"><s-field class="field" fixed="false" part="field"><div class="label" part="label" slot="label"></div><div class="view"></div><svg viewBox="0 -960 960 960" slot="end"><path d="M320-400q-17 0-28.5-11.5T280-440q0-17 11.5-28.5T320-480q17 0 28.5 11.5T360-440q0 17-11.5 28.5T320-400Zm160 0q-17 0-28.5-11.5T440-440q0-17 11.5-28.5T480-480q17 0 28.5 11.5T520-440q0 17-11.5 28.5T480-400Zm160 0q-17 0-28.5-11.5T600-440q0-17 11.5-28.5T640-480q17 0 28.5 11.5T680-440q0 17-11.5 28.5T640-400ZM200-80q-33 0-56.5-23.5T120-160v-560q0-33 23.5-56.5T200-800h40v-80h80v80h320v-80h80v80h40q33 0 56.5 23.5T840-720v560q0 33-23.5 56.5T760-80H200Zm0-80h560v-400H200v400Zm0-480h560v-80H200v80Zm0 0v-80 80Z"></path></svg><s-ripple slot="custom" class="ripple" attached="true"></s-ripple></s-field></slot><s-date class="date" part="date"></s-date><s-ripple class="negative" slot="action" part="negative">${Ge.negativeText}</s-ripple><s-ripple class="positive" slot="action" part="positive">${Ge.positiveText}</s-ripple></s-dialog>`,
    ue = class extends h({
      style: yo,
      template: wo,
      props: Ge,
      setup(t) {
        let e = t.querySelector("s-dialog"),
          r = t.querySelector("s-date"),
          a = t.querySelector(".negative"),
          i = t.querySelector(".positive"),
          l = t.querySelector("s-field"),
          n = t.querySelector(".label"),
          d = t.querySelector(".view"),
          c = { date: "" };
        return (
          e.addEventListener("show", () => {
            (l.fixed = !0),
              (l.focused = !0),
              c.date || ((d.textContent = this.label), (d.style.opacity = "0"));
          }),
          (e.onclose = () => {
            (l.focused = !1), c.date || (l.fixed = !1);
          }),
          (i.onclick = () => {
            (this.value = r.value),
              d.style.removeProperty("opacity"),
              this.dispatchEvent(new Event("change"));
          }),
          {
            value: {
              get: () => c.date,
              set: (o) => {
                if (((c.date = o), o === "")) {
                  (r.value = D(new Date())),
                    (l.fixed = !1),
                    (d.textContent = "");
                  return;
                }
                (l.fixed = !0),
                  (d.textContent = D(o, this.format)),
                  (r.value = o);
              },
            },
            locale: { get: () => r.locale, set: (o) => (r.locale = o) },
            min: { get: () => r.min, set: (o) => (r.min = o) },
            max: { get: () => r.max, set: (o) => (r.max = o) },
            label: (o) => (n.textContent = o),
            positiveText: (o) => (i.textContent = o),
            negativeText: (o) => (a.textContent = o),
          }
        );
      },
    }) {};
  ue.define(bo);
  var ko = "s-scroll-view",
    Eo =
      ":host{display:block;overflow:auto}@media (pointer: fine){:host::-webkit-scrollbar{background:transparent;width:6px;height:6px}:host::-webkit-scrollbar-thumb{background:var(--s-color-outline-variant, #C0C8CC);border-radius:3px}@supports not selector(::-webkit-scrollbar){:host{scrollbar-color:var(--s-color-outline-variant, #C0C8CC) transparent}}}",
    Co = "<slot></slot>",
    me = class extends h({ style: Eo, template: Co }) {};
  me.define(ko);
  var qo = "s-dialog",
    So = g({ showed: !1, size: ["standard", "full"] }),
    $o = L({
      show: CustomEvent,
      showed: Event,
      close: CustomEvent,
      closed: Event,
    }),
    zo =
      ':host{display:inline-block;vertical-align:middle}dialog{inset:0;width:100%;height:100%;background:none;border:none;padding:0;max-width:none;max-height:none;outline:none;color:inherit}dialog::backdrop{background:none}.wrapper{width:100%;height:100%;display:flex;justify-content:center;align-items:center;position:relative;pointer-events:none}.scrim{position:absolute;inset:0;width:100%;height:100%;opacity:0;backdrop-filter:saturate(180%) blur(2px)}.scrim:before{content:"";display:block;width:100%;height:100%;opacity:.75;background:var(--s-color-scrim, #000000)}dialog.show .scrim{opacity:1}.container,::slotted([slot=custom]){max-width:calc(100% - 48px);max-height:calc(100% - 48px);pointer-events:auto;position:relative;border-radius:28px;display:flex;outline:none;flex-direction:column;overflow:hidden;transition-timing-function:ease-out;box-shadow:var(--s-elevation-level5, 0 10px 14px -6px rgba(0, 0, 0, .2), 0 22px 35px 3px rgba(0, 0, 0, .14), 0 8px 42px 7px rgba(0, 0, 0, .12));background:var(--s-color-surface-container-high, #E7E8EA)}:host([size=full]) .container{width:100%;height:100%;border-radius:0;max-width:none;max-height:none}:host([size=full]) ::slotted(:is([slot=text],:not([slot]))){max-width:100%;width:auto}::slotted([slot=headline]){padding:24px 24px 0;font-size:1.5rem;line-height:22px;font-weight:600;color:var(--s-color-on-surface, #191C1E);flex-shrink:0}.text{user-select:text;-webkit-user-select:text;flex-grow:1}::slotted([slot=text]){margin:16px 24px;max-width:calc(100% - 48px);line-height:22px}::slotted(:is(:not([slot]),[slot=text])){width:375px}::slotted(:not([slot])){max-width:100%}.action{display:flex;justify-content:flex-end;padding:0 14px;flex-shrink:0}::slotted([slot=action]){min-width:72px;margin:16px 2px;display:inline-flex;align-items:center;padding:0 24px;color:var(--s-color-primary, #006782);box-sizing:border-box;height:40px;font-size:.875rem;cursor:pointer}',
    To =
      '<slot name="trigger"></slot><dialog part="popup"><div class="scrim" part="scrim"></div><slot name="custom" class="wrapper" part="wrapper"><div class="container" part="container"><slot name="headline"></slot><s-scroll-view class="text" part="view"><slot></slot><slot name="text"></slot></s-scroll-view><div class="action" part="action"><slot name="action"></slot></div></div></slot></dialog>',
    Lo = (s) => {
      let t = document.body,
        e = new _(),
        r = document.body.firstElementChild;
      if ((r && r.tagName === "S-PAGE" && (t = r), typeof s == "string")) {
        let a = document.createElement("div");
        (a.slot = "text"), (a.textContent = s), e.appendChild(a);
      } else {
        if ((s.root && (t = s.root), s.headline)) {
          let i = document.createElement("div");
          (i.slot = "headline"), (i.textContent = s.headline), e.appendChild(i);
        }
        if (s.text) {
          let i = document.createElement("div");
          (i.slot = "text"), (i.textContent = s.text), e.appendChild(i);
        }
        s.view &&
          (typeof s.view == "function" ? s.view(e) : e.appendChild(s.view));
        let a = s.actions ?? [];
        for (let i of Array.isArray(a) ? a : [a]) {
          let l = document.createElement("s-button");
          (l.slot = "action"),
            (l.type = "text"),
            (l.textContent = i.text),
            i.click && (l.onclick = i.click),
            e.appendChild(l);
        }
      }
      return (
        (e.showed = !0),
        e.addEventListener("closed", () => t.removeChild(e)),
        t.appendChild(e),
        e
      );
    },
    _ = class extends h({
      style: zo,
      template: To,
      props: So,
      events: $o,
      methods: { builder: Lo },
      setup(t) {
        let e = t.querySelector("dialog"),
          r = t.querySelector(".scrim"),
          a = t.querySelector(".wrapper"),
          i = getComputedStyle(this),
          l = () => {
            let o =
                i.getPropertyValue("--s-motion-easing-standard") ||
                "cubic-bezier(0.2, 0, 0, 1.0)",
              f = i.getPropertyValue("--s-motion-duration-medium4") || "400ms";
            return { easing: o, duration: k(f) };
          };
        t.querySelector("slot[name=trigger]").onclick = () => {
          if (
            this.showed ||
            !this.dispatchEvent(
              new CustomEvent("show", {
                cancelable: !0,
                detail: { source: "TRIGGER" },
              })
            )
          )
            return console.log("\u62D2\u7EDD");
          this.showed = !0;
        };
        let n = (o) => {
          !this.showed ||
            !this.dispatchEvent(
              new CustomEvent("close", {
                cancelable: !0,
                detail: { source: o },
              })
            ) ||
            (this.showed = !1);
        };
        (t.querySelector(".scrim").onclick = () => n("SCRIM")),
          (t.querySelector("slot[name=action]").onclick = () => n("ACTION"));
        let d = () => {
            if (!this.isConnected || e.open) return;
            let o = l();
            e.showModal(),
              e.classList.add("show"),
              r.animate({ opacity: [0, 1] }, o),
              a
                .animate(
                  { transform: ["scale(.9)", "scale(1)"], opacity: [0, 1] },
                  o
                )
                .addEventListener("finish", () =>
                  this.dispatchEvent(new Event("showed"))
                );
          },
          c = () => {
            if (!this.isConnected || !e.open) return;
            let o = l();
            r.animate({ opacity: [1, 0] }, o),
              a
                .animate(
                  { transform: ["scale(1)", "scale(.9)"], opacity: [1, 0] },
                  o
                )
                .addEventListener("finish", () => {
                  e.close(),
                    e.classList.remove("show"),
                    this.dispatchEvent(new Event("closed"));
                });
          };
        return {
          onMounted: () => this.showed && !e.open && d(),
          showed: (o) => (o ? d() : c()),
        };
      },
    }) {};
  _.define(qo);
  var Fo = "s-divider",
    Mo =
      ':host{display:flex;align-items:center;margin:0 16px;gap:8px;font-size:.75rem;color:var(--s-color-outline, #70787D)}:host:before,:host:after{content:"";flex-grow:1;border-top:solid 1px var(--s-color-outline-variant, #C0C8CC)}:host(:empty){gap:0}',
    Ao = "<slot></slot>",
    ge = class extends h({ style: Mo, template: Ao }) {};
  ge.define(Fo);
  var Po = "s-drawer",
    Do =
      ':host{display:flex;height:100%;overflow:hidden;position:relative;container-name:s-drawer;container-type:inline-size}.start,.end{flex-shrink:0;height:100%;display:none;overflow:hidden}.start{order:-1}.scrim{position:absolute;inset:0;width:100%;height:100%;opacity:0;backdrop-filter:saturate(180%) blur(2px);pointer-events:none}.scrim:before{content:"";display:block;width:100%;height:100%;opacity:.75;background:var(--s-color-scrim, #000000)}.view{display:flex;flex-direction:column;flex-grow:1;min-width:0;height:100%;position:relative}::slotted(:is([slot=start],[slot=end])){width:280px;border-width:1px;height:100%;box-sizing:border-box;pointer-events:auto;position:relative;background:var(--s-color-surface-container-low, #F2F4F5);border-color:var(--s-color-surface-variant, #DCE4E8)}::slotted([slot=start]){border-right-style:solid}::slotted([slot=end]){border-left-style:solid}::slotted(s-scroll-view:not([slot])){flex-grow:1}.start.show,.end.show{display:block}.scrim.s-laptop{display:block;z-index:3}.scrim.s-laptop.show-laptop{opacity:1;pointer-events:auto}.start.s-laptop,.end.s-laptop{position:absolute;z-index:3;max-width:75%;display:none}.end.s-laptop{left:auto;right:0}.start.s-laptop.show,.end.s-laptop.show{display:none}.start.s-laptop.show-laptop,.end.s-laptop.show-laptop{display:block}.s-laptop ::slotted(:is([slot=start],[slot=end])){border-left-style:none;border-right-style:none;box-shadow:var(--s-elevation-level-3, 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12))}@container s-drawer (max-width: 1024px){.scrim{display:block;z-index:3}.scrim.show-laptop{opacity:1;pointer-events:auto}.start,.end{position:absolute;z-index:3;max-width:75%;display:none}.end{left:auto;right:0}.start.show,.end.show{display:none}.start.show-laptop,.end.show-laptop{display:block}::slotted(:is([slot=start],[slot=end])){border-left-style:none;border-right-style:none;box-shadow:var(--s-elevation-level-3, 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12))}}',
    Zo =
      '<slot class="view" part="view"></slot><div class="scrim" part="scrim show"></div><slot name="start" class="start show" part="start"></slot><slot name="end" class="end show" part="end"></slot>',
    fe = class extends h({
      style: Do,
      template: Zo,
      setup(t) {
        let e = t.querySelector(".scrim"),
          r = {
            start: t.querySelector(".start"),
            end: t.querySelector(".end"),
          },
          a = getComputedStyle(this),
          i = () => {
            let x =
                a.getPropertyValue("--s-motion-easing-standard") ||
                "cubic-bezier(0.2, 0, 0, 1.0)",
              m = a.getPropertyValue("--s-motion-duration-medium4") || "400ms";
            return { easing: x, duration: k(m) };
          },
          l = (x = "start") => r[x],
          n = (x) => (x ?? this.offsetWidth <= 1024 ? "show-laptop" : "show"),
          d = (x = "start") => ({ start: -1, end: 1 }[x]),
          c = (x, m) => {
            let p = l(x),
              u = n(m);
            if (p.classList.contains(u)) return;
            let y = d(x),
              v = i();
            p.classList.add(u), e.classList.add(u);
            let b =
              this.offsetWidth <= 1024
                ? {
                    transform: [
                      `translateX(${p.offsetWidth * y}px)`,
                      "translateX(0)",
                    ],
                  }
                : { width: ["0", p.offsetWidth + "px"] };
            this.offsetWidth <= 1024 && e.animate({ opacity: [0, 1] }, v),
              p.animate(b, v);
          },
          o = (x, m) => {
            let p = l(x),
              u = n(m);
            if (!p.classList.contains(u)) return;
            let y = d(x),
              v = i(),
              b = {
                ...(this.offsetWidth <= 1024
                  ? {
                      transform: [
                        "translateX(0)",
                        `translateX(${p.offsetWidth * y}px)`,
                      ],
                    }
                  : { width: [p.offsetWidth + "px", "0px"] }),
              };
            (p.style.display = "block"),
              p
                .animate(b, v)
                .finished.then(() => p.style.removeProperty("display")),
              this.offsetWidth <= 1024 && e.animate({ opacity: [1, 0] }, v),
              p.classList.remove(u),
              e.classList.remove(u);
          },
          f = (x, m) => {
            let p = l(x),
              u = n(m);
            p.classList.contains(u) ? o(x, m) : c(x, m);
          };
        return (
          e.addEventListener("click", () => {
            o("start", !0), o("end", !0);
          }),
          P.CSSContainer ||
            new ResizeObserver(() => {
              e.classList.toggle("s-laptop", this.offsetWidth <= 1024),
                r.start.classList.toggle("s-laptop", this.offsetWidth <= 1024),
                r.end.classList.toggle("s-laptop", this.offsetWidth <= 1024);
            }).observe(this),
          { expose: { show: c, close: o, toggle: f } }
        );
      },
    }) {};
  fe.define(Po);
  var Bo = "s-empty",
    No =
      ":host{display:flex;justify-content:center;flex-direction:column;align-items:center;padding:48px 16px;gap:12px;font-size:.75rem;border-radius:4px;box-sizing:border-box;color:var(--s-color-outline, #70787D)}.shadow{fill:var(--s-color-surface-container-high, #E7E8EA)}.box{fill:var(--s-color-surface-container-highest, #E1E3E4)}.border{stroke:var(--s-color-outline, #70787D)}::slotted(:is(svg,s-icon)){color:currentColor;fill:currentColor;width:40px}",
    Ho =
      '<slot name="icon"><svg width="64" height="41" viewBox="0 0 64 41"><g transform="translate(0 1)" fill="none" fill-rule="evenodd"><ellipse cx="32" cy="33" rx="32" ry="7" class="shadow"></ellipse><g fill-rule="nonzero" class="border"><path d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"></path><path class="box" d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"></path></g></g></svg></slot><slot></slot>',
    xe = class extends h({ style: No, template: Ho }) {};
  xe.define(Bo);
  var jo = "s-fab",
    Io = g({ hidden: !1, disabled: !1 }),
    Wo =
      ":host{display:inline-flex;vertical-align:middle;justify-content:center;align-items:center;position:relative;cursor:pointer;box-sizing:border-box;min-height:48px;font-size:.875rem;border-radius:28px;font-weight:500;white-space:nowrap;text-transform:capitalize;padding:0 24px;transition-property:box-shadow,transform;transition-duration:var(--s-motion-duration-short4, .2s);transition-timing-function:var(--s-motion-easing-standard, cubic-bezier(.2, 0, 0, 1));box-shadow:var(--s-elevation-level3, 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12));background:var(--s-color-primary-container, #BAEAFF);color:var(--s-color-on-primary-container, #004D62)}:host([disabled=true]){pointer-events:none;box-shadow:var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));background:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 12%,transparent)!important;color:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 38%,transparent)!important}:host([hidden=true]){transform:scale(0);pointer-events:none}::slotted(*){flex-shrink:0}::slotted(:is(svg,s-icon)){width:24px;height:24px;fill:currentColor;color:currentColor}::slotted(:is(svg,s-icon):not([slot])){margin:16px -8px}::slotted(:is(svg[slot=start],s-icon[slot=start])){margin-left:-8px;margin-right:8px}::slotted(:is(svg[slot=end],s-icon[slot=end])){margin-left:8px;margin-right:-8px}:host([pressed]){box-shadow:var(--s-elevation-level4, 0 8px 10px -5px rgba(0, 0, 0, .2), 0 16px 24px 2px rgba(0, 0, 0, .14), 0 6px 30px 5px rgba(0, 0, 0, .12))}@media (pointer: fine){:host(:hover){box-shadow:var(--s-elevation-level4, 0 8px 10px -5px rgba(0, 0, 0, .2), 0 16px 24px 2px rgba(0, 0, 0, .14), 0 6px 30px 5px rgba(0, 0, 0, .12))}}@supports not (color: color-mix()){:host([disabled=true]){background:var(--s-color-surface-container-high, #E7E8EA)!important;color:var(--s-color-outline, #70787D)!important}}",
    Vo =
      '<slot name="start"></slot><slot></slot><slot name="end"></slot><s-ripple attached="true" part="ripple"></s-ripple>',
    ve = class extends h({ style: Wo, template: Vo, props: Io }) {};
  ve.define(jo);
  var Yo = "s-icon-button",
    Ro = g({
      disabled: !1,
      type: ["standard", "filled", "filled-tonal", "outlined"],
    }),
    _o =
      ":host{display:inline-flex;vertical-align:middle;justify-content:center;align-items:center;cursor:pointer;border-radius:50%;width:40px;aspect-ratio:1;-webkit-aspect-ratio:1;color:var(--s-color-on-surface-variant, #40484C);position:relative;box-sizing:border-box}:host([disabled=true]){pointer-events:none!important;color:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 38%,transparent)!important;background:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 12%,transparent)!important}:host([type=filled]){background:var(--s-color-primary, #006782);color:var(--s-color-on-primary, #ffffff)}:host([type=filled]) ::slotted([slot=badge]){box-shadow:0 0 0 2px var(--s-color-surface, #F8F9FB)}:host([type=filled-tonal]){background:var(--s-color-secondary-container, #CFE6F1);color:var(--s-color-on-secondary-container, #354A53)}:host([type=outlined]){border:solid 1px var(--s-color-outline, #70787D)}:host([type=outlined][disabled=true]){background:none!important;border-color:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 12%,transparent)!important}::slotted(:not([slot=badge])){color:inherit}::slotted(svg){width:24px;height:24px;fill:currentColor}::slotted([slot=badge]){position:absolute;right:4px;top:0;flex-shrink:0}@supports not (color: color-mix(in srgb,black,white)){:host([disabled=true]){background:var(--s-color-surface-container-high, #E7E8EA)!important;color:var(--s-color-outline, #70787D)!important}:host([type=outlined][disabled=true]){border-color:var(--s-color-surface-container-highest, #E1E3E4)!important}}",
    Oo =
      '<slot name="start"></slot><slot></slot><slot name="end"></slot><s-ripple class="ripple" attached="true" part="ripple"></s-ripple><slot name="badge"></slot>',
    be = class extends h({ style: _o, template: Oo, props: Ro }) {};
  be.define(Yo);
  var O = {
      none: "",
      home: "M240-200h120v-240h240v240h120v-360L480-740 240-560v360Zm-80 80v-480l320-240 320 240v480H520v-240h-80v240H160Zm320-350Z",
      add: "M440-440H200v-80h240v-240h80v240h240v80H520v240h-80v-240Z",
      search:
        "M784-120 532-372q-30 24-69 38t-83 14q-109 0-184.5-75.5T120-580q0-109 75.5-184.5T380-840q109 0 184.5 75.5T640-580q0 44-14 83t-38 69l252 252-56 56ZM380-400q75 0 127.5-52.5T560-580q0-75-52.5-127.5T380-760q-75 0-127.5 52.5T200-580q0 75 52.5 127.5T380-400Z",
      menu: "M120-240v-80h720v80H120Zm0-200v-80h720v80H120Zm0-200v-80h720v80H120Z",
      arrow_back:
        "m313-440 224 224-57 56-320-320 320-320 57 56-224 224h487v80H313Z",
      arrow_forward: { name: "arrow_back", angle: 180 },
      arrow_upward: { name: "arrow_back", angle: 90 },
      arrow_downward: { name: "arrow_back", angle: -90 },
      arrow_drop_up: "m280-400 200-200 200 200H280Z",
      arrow_drop_down: { name: "arrow_drop_up", angle: 180 },
      arrow_drop_left: { name: "arrow_drop_up", angle: -90 },
      arrow_drop_right: { name: "arrow_drop_up", angle: 90 },
      more_vert:
        "M480-160q-33 0-56.5-23.5T400-240q0-33 23.5-56.5T480-320q33 0 56.5 23.5T560-240q0 33-23.5 56.5T480-160Zm0-240q-33 0-56.5-23.5T400-480q0-33 23.5-56.5T480-560q33 0 56.5 23.5T560-480q0 33-23.5 56.5T480-400Zm0-240q-33 0-56.5-23.5T400-720q0-33 23.5-56.5T480-800q33 0 56.5 23.5T560-720q0 33-23.5 56.5T480-640Z",
      more_horiz: { name: "more_vert", angle: 90 },
      close:
        "m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z",
      done: "M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z",
      chevron_up: "M480-528 296-344l-56-56 240-240 240 240-56 56-184-184Z",
      chevron_down: { name: "chevron_up", angle: 180 },
      chevron_left: { name: "chevron_up", angle: -90 },
      chevron_right: { name: "chevron_up", angle: 90 },
      light_mode:
        "M480-360q50 0 85-35t35-85q0-50-35-85t-85-35q-50 0-85 35t-35 85q0 50 35 85t85 35Zm0 80q-83 0-141.5-58.5T280-480q0-83 58.5-141.5T480-680q83 0 141.5 58.5T680-480q0 83-58.5 141.5T480-280ZM200-440H40v-80h160v80Zm720 0H760v-80h160v80ZM440-760v-160h80v160h-80Zm0 720v-160h80v160h-80ZM256-650l-101-97 57-59 96 100-52 56Zm492 496-97-101 53-55 101 97-57 59Zm-98-550 97-101 59 57-100 96-56-52ZM154-212l101-97 55 53-97 101-59-57Zm326-268Z",
      dark_mode:
        "M480-120q-150 0-255-105T120-480q0-150 105-255t255-105q14 0 27.5 1t26.5 3q-41 29-65.5 75.5T444-660q0 90 63 153t153 63q55 0 101-24.5t75-65.5q2 13 3 26.5t1 27.5q0 150-105 255T480-120Zm0-80q88 0 158-48.5T740-375q-20 5-40 8t-40 3q-123 0-209.5-86.5T364-660q0-20 3-40t8-40q-78 32-126.5 102T200-480q0 116 82 198t198 82Zm-10-270Z",
      star: "m354-287 126-76 126 77-33-144 111-96-146-13-58-136-58 135-146 13 111 97-33 143ZM233-120l65-281L80-590l288-25 112-265 112 265 288 25-218 189 65 281-247-149-247 149Zm247-350Z",
      favorite:
        "m480-120-58-52q-101-91-167-157T150-447.5Q111-500 95.5-544T80-634q0-94 63-157t157-63q52 0 99 22t81 62q34-40 81-62t99-22q94 0 157 63t63 157q0 46-15.5 90T810-447.5Q771-395 705-329T538-172l-58 52Zm0-108q96-86 158-147.5t98-107q36-45.5 50-81t14-70.5q0-60-40-100t-100-40q-47 0-87 26.5T518-680h-76q-15-41-55-67.5T300-774q-60 0-100 40t-40 100q0 35 14 70.5t50 81q36 45.5 98 107T480-228Zm0-273Z",
    },
    Xo = "s-icon",
    Go = g({ name: Object.keys(O), $src: "" }),
    Uo =
      ":host{display:inline-flex;vertical-align:middle;justify-content:center;align-items:center;width:24px;aspect-ratio:1;-webkit-aspect-ratio:1;fill:currentColor;box-sizing:border-box;color:var(--s-color-on-surface-variant, #40484C)}svg,img{width:100%;height:100%}::slotted(*){width:100%;height:100%}",
    Qo = "<slot></slot>",
    ye = class extends h({
      style: Uo,
      template: Qo,
      props: Go,
      setup(t) {
        let e = t.querySelector("slot"),
          r = document.createElement("img"),
          a = (i = O.none, l = "") =>
            `<svg viewBox="0 -960 960 960"><path d="${i}" transform="${l}"></path></svg>`;
        return {
          name: (i) => {
            let l = O[i];
            if (typeof l == "string") return (e.innerHTML = a(l));
            let n = l.name;
            typeof O[n] == "string" &&
              (e.innerHTML = a(O[n], `rotate(${l.angle} 480 -480)`));
          },
          src: async () => {
            try {
              let i = new URL(this.src, location.href);
              if (i.pathname.endsWith(".svg")) {
                let l = await (await fetch(i.href)).text(),
                  n = document.createElement("template");
                n.innerHTML = l;
                let d = n.content.childNodes[0];
                if (!(d instanceof SVGElement)) throw new Error("Invalid SVG");
                (e.innerHTML = ""),
                  e.appendChild(d),
                  this.dispatchEvent(new Event("load"));
              } else
                (r.src = i.href),
                  (r.onload = () => {
                    (e.innerHTML = ""),
                      e.appendChild(r),
                      this.dispatchEvent(new Event("load"));
                  }),
                  (r.onerror = () =>
                    this.dispatchEvent(new ErrorEvent("error")));
            } catch {
              this.dispatchEvent(new ErrorEvent("error"));
            }
          },
        };
      },
    }) {};
  ye.define(Xo);
  var Jo = "s-linear-progress",
    Ko = g({ indeterminate: !1, animated: !1, $max: 100, $value: 0 }),
    er =
      ":host{display:block;height:4px;color:var(--s-color-primary, #006782);border-radius:2px;overflow:hidden}:host([animated=true]) .known>.block{transition:transform var(--s-motion-duration-short4, .2s) var(--s-motion-easing-emphasized, cubic-bezier(.2, 0, 0, 1))}:host([indeterminate=true]) .known,.unknown{display:none}:host([indeterminate=true]) .unknown,.known{display:flex}.container{height:100%;border-radius:inherit;position:relative}.block{position:absolute;height:100%;border-radius:inherit;width:100%;left:0;top:0}.track{background:var(--s-color-secondary-container, #CFE6F1)}.indicator{background:currentColor}.indicator-dot{position:absolute;right:0;top:0;height:100%;aspect-ratio:1;-webkit-aspect-ratio:1;background:currentColor;border-radius:inherit}@keyframes unknown{0%{transform:translate(0)}to{transform:translate(150%)}}.unknown{justify-content:flex-end;gap:4px;animation:unknown 2s linear infinite}.unknown .block{position:static;flex-grow:1;width:100%;flex-shrink:0}.unknown .indicator{width:50%}",
    tr =
      '<div class="container known" part="container"><div class="track block" style="transform: translateX(0%)" part="track"></div><div class="indicator-dot" part="indicator-dot"></div><div class="indicator block" style="transform: translateX(-100%)" part="indicator"></div></div><div class="container unknown" part="container"><div class="track block" part="track"></div><div class="indicator block" part="indicator"></div><div class="track block" part="indicator"></div></div>',
    we = class extends h({
      style: er,
      template: tr,
      props: Ko,
      setup(t) {
        let e = t.querySelector(".known>.track"),
          r = t.querySelector(".known>.indicator"),
          a = () => {
            let i = (Math.min(this.value, this.max) / this.max) * 100;
            (e.style.transform = `translateX(calc(${i}% + ${
              i === 0 ? 0 : 4
            }px))`),
              (r.style.transform = `translateX(${i - 100}%)`);
          };
        return { max: a, value: a };
      },
    }) {};
  we.define(Jo);
  var or = "s-menu",
    rr =
      ":host{display:flex;flex-direction:column;font-size:.875rem;padding:4px 0;background:var(--s-color-surface-container-low, #F2F4F5)}:host(:nth-of-type(n+2)){border-top:solid 1px var(--s-color-surface-variant, #DCE4E8)}::slotted([slot=label]){display:flex;align-items:center;height:44px;margin:-4px 20px;font-size:.75rem;color:var(--s-color-on-surface-variant, #40484C);white-space:nowrap;max-width:100%;overflow:hidden}",
    sr = '<slot name="label"></slot><slot></slot>',
    ke = class extends h({ style: rr, template: sr }) {},
    ir = "s-menu-item",
    nt = g({ checked: !1, folded: !0 }),
    ar =
      ":host{display:flex;flex-direction:column;margin:4px 8px 4px 0;color:var(--s-color-on-surface, #191C1E)}.container{display:flex;align-items:center;height:40px;border-radius:0 24px 24px 0;padding:0 20px;flex-shrink:0}:host([checked=true]) .container{background:var(--s-color-secondary-container, #CFE6F1);color:var(--s-color-on-secondary-container, #354A53)}.text{flex-grow:1;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.toggle-icon{width:24px;height:24px;display:none;margin-right:-8px;margin-left:12px;transform:rotate(-90deg);transition:transform var(--s-motion-duration-short4, .2s) var(--s-motion-easing-standard, cubic-bezier(.2, 0, 0, 1));fill:var(--s-color-on-surface-variant, #40484C)}.show-menu .toggle-icon{display:block}:host([folded=false]) .toggle-icon{transform:rotate(0)}.fold{flex-shrink:0}.show-menu+.fold{margin:0 -8px 0 0}.menu{display:block;padding-top:8px}::slotted(:is(svg,s-icon)){color:var(--s-color-on-surface-variant, #40484C);fill:currentColor;height:24px;width:24px}:host([checked=true]) ::slotted(:is(svg,s-icon)){color:currentColor}::slotted([slot]){flex-shrink:0}::slotted([slot=start]){margin-left:-4px;margin-right:12px}::slotted([slot=end]){margin-right:-8px;margin-left:12px}::slotted([slot=menu]){background:var(--s-color-surface-container-high, #E7E8EA)}",
    nr = `<s-ripple class="container" part="container"><slot name="start"></slot><div class="text" part="text"><slot></slot></div><slot name="end"><svg viewBox="0 -960 960 960" class="toggle-icon"><path d="M480-360 280-560h400L480-360Z"></path></svg></slot></s-ripple><s-fold class="fold" part="fold" folded="${nt.folded}"><slot name="menu" class="menu"></slot></s-fold>`,
    Ee = class extends h({
      style: ar,
      template: nr,
      props: nt,
      setup(t) {
        let e = t.querySelector(".container"),
          r = t.querySelector(".fold"),
          a = t.querySelector("slot[name=menu]");
        return (
          (r.onclick = (i) => i.stopPropagation()),
          (a.onslotchange = () =>
            e.classList[a.assignedElements().length > 0 ? "add" : "remove"](
              "show-menu"
            )),
          (e.onclick = () => {
            e.classList.contains("show-menu") && (this.folded = !this.folded);
          }),
          { folded: (i) => (r.folded = i) }
        );
      },
    }) {};
  ke.define(or), Ee.define(ir);
  var Ue = "s-navigation",
    lr = g({ mode: ["bottom", "rail"], $value: "" }),
    cr =
      ":host{display:flex;justify-content:center;align-items:center;overflow:hidden;background:var(--s-color-surface, #F8F9FB);box-shadow:var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));position:relative;padding-bottom:env(safe-area-inset-bottom)}:host([mode=rail]){flex-direction:column;justify-content:flex-start;width:80px;box-shadow:none;height:100%;background:none;padding-bottom:0}::slotted(s-navigation-item){height:64px}:host([mode=rail]) ::slotted(s-navigation-item){height:72px}:host([mode=rail]) ::slotted(s-icon-button[slot=start]){width:56px;height:56px;margin:16px 0 8px;border-radius:12px}:host([mode=rail]) ::slotted([slot=end]){flex-grow:1}",
    dr =
      '<slot name="start"></slot><slot id="slot"></slot><slot name="end"></slot>',
    B = class extends h({
      style: cr,
      template: dr,
      props: lr,
      setup(t) {
        let e = t.querySelector("#slot"),
          r = new S({ context: this, class: X, slot: e });
        return {
          expose: {
            get options() {
              return r.list;
            },
            get selectedIndex() {
              return r.selectedIndex;
            },
          },
          value: { get: () => r.value, set: (a) => (r.value = a) },
        };
      },
    }) {},
    pr = "s-navigation-item",
    hr = g({ selected: !1, $value: "" }),
    ur =
      ":host{display:flex;align-items:center;justify-content:center;flex-direction:column;cursor:pointer;position:relative;font-size:.75rem;font-weight:500;box-sizing:border-box;width:100%;max-width:80px;text-transform:capitalize;transition:color var(--s-motion-duration-short4, .4s) var(--s-motion-easing-emphasized, cubic-bezier(.2, 0, 0, 1));color:var(--s-color-on-surface, #191C1E)}:host([selected=true]){color:var(--s-color-primary, #006782)}.icon{position:relative;display:flex;justify-content:center;align-items:center;height:28px;width:48px;border-radius:14px;transition:background-color var(--s-motion-duration-short4, .4s) var(--s-motion-easing-emphasized, cubic-bezier(.2, 0, 0, 1))}:host([selected=true]) .icon{background:var(--s-color-secondary-container, #CFE6F1)}::slotted(*){flex-shrink:0}::slotted(svg){color:var(--s-color-on-surface-variant, #40484C);fill:currentColor;width:24px;height:24px}:host([selected=true]) ::slotted(:is(svg,s-icon)){color:currentColor}::slotted([slot=badge]){position:absolute;right:4px;top:0}::slotted([slot=text]){margin-top:4px}",
    mr =
      '<s-ripple attached="true" class="icon" part="icon"><slot name="icon"></slot><slot name="badge"></slot></s-ripple><slot name="text"></slot>',
    X = class extends h({
      style: ur,
      template: mr,
      props: hr,
      setup() {
        return (
          this.addEventListener("click", () => {
            this.selected ||
              (this.parentNode instanceof B &&
                this.dispatchEvent(new Event(`${Ue}:select`, { bubbles: !0 })));
          }),
          {
            selected: () => {
              this.parentNode instanceof B &&
                this.dispatchEvent(new Event(`${Ue}:update`, { bubbles: !0 }));
            },
          }
        );
      },
    }) {};
  B.define(Ue), X.define(pr);
  var gr = "s-field",
    fr = g({ focused: !1, fixed: !0 }),
    xr =
      ':host{display:inline-block;vertical-align:middle;font-size:.875rem;--field-padding: 16px;--field-padding-top: var(--field-padding);--field-padding-bottom: var(--field-padding);--field-padding-left: var(--field-padding);--field-padding-right: var(--field-padding);--field-border-radius: 4px;--field-border-width: 1px;--field-focused-border-width: 2px;--field-border-color: var(--s-color-outline, #70787D)}.container{display:flex;height:100%;min-height:inherit}.line{position:relative}.line:before,.line:after{position:absolute;content:"";top:0;left:0;height:100%;width:100%;box-sizing:border-box;border-width:var(--field-border-width);border-color:var(--field-border-color);pointer-events:none}.line:after{border-width:var(--field-focused-border-width);border-color:var(--s-color-primary, #006782);opacity:0;transition:opacity .2s ease-out}:host([focused=true]) .line:after{opacity:1}.start,.end{display:flex;align-items:center;flex-shrink:0;min-width:var(--field-border-radius)}.start:before,.end:before,.start:after,.end:after{border-top-style:solid;border-bottom-style:solid}.start:before,.start:after{border-left-style:solid;border-top-left-radius:var(--field-border-radius);border-bottom-left-radius:var(--field-border-radius)}.end:before,.end:after{border-right-style:solid;border-top-right-radius:var(--field-border-radius);border-bottom-right-radius:var(--field-border-radius);left:auto;right:0}.box{display:grid;grid-template-areas:"a" "a";flex-grow:1}.box:before,.box:after{border-bottom-style:solid}.top,.view{height:100%;display:flex;grid-area:a;position:relative;box-sizing:border-box;margin-left:calc(var(--field-border-radius) * -1);margin-right:calc(var(--field-border-radius) * -1)}.view{align-items:center}.top{pointer-events:none}.top>.left:before,.top>.right:before,.top>.left:after,.top>.right:after{border-top-style:solid}.top>.left{width:calc(var(--field-padding-left) - var(--field-border-radius) - 4px);margin-left:max(4px,var(--field-border-radius));margin-right:min(4px,calc(var(--field-padding-left) - var(--field-border-radius)));flex-shrink:0}:host([fixed=false]) .top>.left{width:calc(var(--field-padding-left) - var(--field-border-radius));margin-right:0}.top>.right{flex-grow:1;width:calc(var(--field-padding-right) - var(--field-border-radius) - 4px);margin-left:min(4px,calc(var(--field-padding-right) - var(--field-border-radius)));margin-right:max(4px,var(--field-border-radius))}:host([fixed=false]) .top>.right{width:calc(var(--field-padding-left) - var(--field-border-radius));margin-left:0}.label{display:block;height:100%;flex-shrink:0}.label>.line:before,.label>.line:after,:host([fixed=false]) .label:before,:host([fixed=false]) .label:after{border-top-style:solid}.label>.line:before,.label>.line:after{transform:translate(-50%);width:min(calc(var(--field-padding-right) - var(--field-border-radius)),8px)}::slotted([slot=label]){display:flex;height:100%;font-size:.75rem;align-items:center;transform:translateY(-50%);color:var(--field-border-color);transition:transform .2s ease-out,font-size .2s ease-out;box-sizing:border-box;position:relative}:host([fixed=false]) ::slotted([slot=label]),::slotted([slot=label]:empty){font-size:inherit;transform:translateY(0)}::slotted([slot=label]:empty):before,::slotted([slot=label]:empty):after{content:"";position:absolute;top:0;left:0;transform:translate(-50%);width:min(calc(var(--field-padding-right) - var(--field-border-radius)),8px);border-top:solid var(--field-border-width);var(--field-border-color)}::slotted([slot=label]:empty):after{opacity:0;border-width:var(--field-focused-border-width);transition:opacity .2s ease-out;border-color:var(--s-color-primary, #006782)}:host([focused=true]) ::slotted([slot=label]:empty):after{opacity:1}:host([focused=true]) ::slotted([slot=label]){color:var(--s-color-primary, #006782)}::slotted(:not([slot])){padding-left:var(--field-padding-left);padding-right:var(--field-padding-right);padding-top:var(--field-padding-top);padding-bottom:var(--field-padding-bottom);display:flex;align-items:center;height:100%;box-sizing:border-box}',
    vr =
      '<div class="container" part="container"><div class="start line" part="start"><slot name="start"></slot></div><div class="box line" part="box"><slot class="view"></slot><div class="top" part="top"><div class="line left"></div><slot name="label" class="label line"><div class="line"></div></slot><div class="line right"></div></div></div><div class="end line" part="end"><slot name="end"></slot></div><slot name="custom"></slot></div>',
    Ce = class extends h({ style: xr, template: vr, props: fr }) {};
  Ce.define(gr);
  var br = "s-fold",
    yr = g({ folded: !1 }),
    wr =
      ":host{display:block}.container{display:grid;grid-template-rows:1fr;overflow:hidden;transition:grid-template-rows var(--s-motion-duration-short4, .2s) var(--s-motion-easing-emphasized, cubic-bezier(.2, 0, 0, 1))}:host([folded=true]) .container{grid-template-rows:0fr}.view{display:block;min-height:0;overflow:hidden}",
    kr =
      '<slot name="trigger"></slot><div class="container" part="container"><slot class="view" part="view"></slot></div>',
    qe = class extends h({
      style: wr,
      template: kr,
      props: yr,
      setup(t) {
        t.querySelector("slot[name=trigger]").onclick = () =>
          (this.folded = !this.folded);
      },
    }) {};
  qe.define(br);
  var Er = "s-page",
    Cr = g({ theme: ["light", "auto", "dark"] }),
    qr =
      ":host{display:flow-root;height:100%;font-family:Roboto,system-ui;color:var(--s-color-on-background);background:var(--s-color-background);--s-color-scrim: #000000;--s-color-primary: #006782;--s-color-on-primary: #ffffff;--s-color-primary-container: #BAEAFF;--s-color-on-primary-container: #004D62;--s-color-secondary: #4C616B;--s-color-on-secondary: #ffffff;--s-color-secondary-container: #CFE6F1;--s-color-on-secondary-container: #354A53;--s-color-tertiary: #5C5B7E;--s-color-on-tertiary: #ffffff;--s-color-tertiary-container: #E2DFFF;--s-color-on-tertiary-container: #444465;--s-color-error: #BA1A1A;--s-color-on-error: #ffffff;--s-color-error-container: #FFDAD6;--s-color-on-error-container: #93000A;--s-color-background: #F8F9FB;--s-color-on-background: #191C1E;--s-color-outline: #70787D;--s-color-outline-variant: #C0C8CC;--s-color-surface: #F8F9FB;--s-color-on-surface: #191C1E;--s-color-surface-variant: #DCE4E8;--s-color-on-surface-variant: #40484C;--s-color-inverse-surface: #2E3132;--s-color-inverse-on-surface: #EFF1F3;--s-color-inverse-primary: #60D4FE;--s-color-surface-container: #ECEEF0;--s-color-surface-container-high: #E7E8EA;--s-color-surface-container-highest: #E1E3E4;--s-color-surface-container-low: #F2F4F5;--s-color-surface-container-lowest: #FFFFFF;--s-color-success: #006d43;--s-color-on-success: #ffffff;--s-color-success-container: #92f7bc;--s-color-on-success-container: #002111;--s-color-warning: #6f5d00;--s-color-on-warning: #ffffff;--s-color-warning-container: #ffe169;--s-color-on-warning-container: #221b00;--s-color-dark-primary: #60D4FE;--s-color-dark-on-primary: #003545;--s-color-dark-primary-container: #004D62;--s-color-dark-on-primary-container: #BAEAFF;--s-color-dark-secondary: #B4CAD5;--s-color-dark-on-secondary: #1E333C;--s-color-dark-secondary-container: #354A53;--s-color-dark-on-secondary-container: #CFE6F1;--s-color-dark-tertiary: #C4C3EA;--s-color-dark-on-tertiary: #2D2D4D;--s-color-dark-tertiary-container: #444465;--s-color-dark-on-tertiary-container: #E2DFFF;--s-color-dark-error: #FFB4AB;--s-color-dark-on-error: #690005;--s-color-dark-error-container: #93000A;--s-color-dark-on-error-container: #FFDAD6;--s-color-dark-background: #111415;--s-color-dark-on-background: #E1E3E4;--s-color-dark-outline: #8A9296;--s-color-dark-outline-variant: #40484C;--s-color-dark-surface: #111415;--s-color-dark-on-surface: #E1E3E4;--s-color-dark-surface-variant: #40484C;--s-color-dark-on-surface-variant: #C0C8CC;--s-color-dark-inverse-surface: #E1E3E4;--s-color-dark-inverse-on-surface: #2E3132;--s-color-dark-inverse-primary: #006782;--s-color-dark-surface-container: #1D2022;--s-color-dark-surface-container-high: #272A2C;--s-color-dark-surface-container-highest: #323537;--s-color-dark-surface-container-low: #191C1E;--s-color-dark-surface-container-lowest: #0C0F10;--s-color-dark-success: #76daa1;--s-color-dark-on-success: #003920;--s-color-dark-success-container: #005231;--s-color-dark-on-success-container: #92f7bc;--s-color-dark-warning: #e2c54b;--s-color-dark-on-warning: #3a3000;--s-color-dark-warning-container: #544600;--s-color-dark-on-warning-container: #ffe169;--s-elevation-level1: 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12);--s-elevation-level2: 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12);--s-elevation-level3: 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12);--s-elevation-level4: 0 8px 10px -5px rgba(0, 0, 0, .2), 0 16px 24px 2px rgba(0, 0, 0, .14), 0 6px 30px 5px rgba(0, 0, 0, .12);--s-elevation-level5: 0 10px 14px -6px rgba(0, 0, 0, .2), 0 22px 35px 3px rgba(0, 0, 0, .14), 0 8px 42px 7px rgba(0, 0, 0, .12);--s-motion-duration-Short1: 50ms;--s-motion-duration-short2: .1s;--s-motion-duration-short3: .15s;--s-motion-duration-short4: .2s;--s-motion-duration-medium1: .25s;--s-motion-duration-medium2: .3s;--s-motion-duration-medium3: .35s;--s-motion-duration-medium4: .4s;--s-motion-duration-long1: .45s;--s-motion-duration-long2: .5s;--s-motion-duration-long3: .55s;--s-motion-duration-long4: .6s;--s-motion-duration-extra-long1: .7s;--s-motion-duration-extra-long2: .8s;--s-motion-duration-extra-long3: .9s;--s-motion-duration-extra-long4: 1s;--s-motion-easing-emphasized: cubic-bezier(.2, 0, 0, 1);--s-motion-easing-emphasized-decelerate: cubic-bezier(.05, .7, .1, 1);--s-motion-easing-emphasized-accelerate: cubic-bezier(.3, 0, .8, .15);--s-motion-easing-standard: cubic-bezier(.2, 0, 0, 1);--s-motion-easing-standard-decelerate: cubic-bezier(0, 0, 0, 1);--s-motion-easing-standard-accelerate: cubic-bezier(.3, 0, 1, 1)}:host([dark]){--s-color-primary: var(--s-color-dark-primary) !important;--s-color-on-primary: var(--s-color-dark-on-primary) !important;--s-color-primary-container: var(--s-color-dark-primary-container) !important;--s-color-on-primary-container: var(--s-color-dark-on-primary-container) !important;--s-color-secondary: var(--s-color-dark-secondary) !important;--s-color-on-secondary: var(--s-color-dark-on-secondary) !important;--s-color-secondary-container: var(--s-color-dark-secondary-container) !important;--s-color-on-secondary-container: var(--s-color-dark-on-secondary-container) !important;--s-color-tertiary: var(--s-color-dark-tertiary) !important;--s-color-on-tertiary: var(--s-color-dark-on-tertiary) !important;--s-color-tertiary-container: var(--s-color-dark-tertiary-container) !important;--s-color-on-tertiary-container: var(--s-color-dark-on-tertiary-container) !important;--s-color-error: var(--s-color-dark-error) !important;--s-color-on-error: var(--s-color-dark-on-error) !important;--s-color-error-container: var(--s-color-dark-error-container) !important;--s-color-on-error-container: var(--s-color-dark-on-error-container) !important;--s-color-background: var(--s-color-dark-background) !important;--s-color-on-background: var(--s-color-dark-on-background) !important;--s-color-outline: var(--s-color-dark-outline) !important;--s-color-outline-variant: var(--s-color-dark-outline-variant) !important;--s-color-surface: var(--s-color-dark-surface) !important;--s-color-on-surface: var(--s-color-dark-on-surface) !important;--s-color-surface-variant: var(--s-color-dark-surface-variant) !important;--s-color-on-surface-variant: var(--s-color-dark-on-surface-variant) !important;--s-color-inverse-surface: var(--s-color-dark-inverse-surface) !important;--s-color-inverse-on-surface: var(--s-color-dark-inverse-on-surface) !important;--s-color-inverse-primary: var(--s-color-dark-inverse-primary) !important;--s-color-surface-container: var(--s-color-dark-surface-container) !important;--s-color-surface-container-high: var(--s-color-dark-surface-container-high) !important;--s-color-surface-container-highest: var(--s-color-dark-surface-container-highest) !important;--s-color-surface-container-low: var(--s-color-dark-surface-container-low) !important;--s-color-surface-container-lowest: var(--s-color-dark-surface-container-lowest) !important;--s-color-success: var(--s-color-dark-success) !important;--s-color-on-success: var(--s-color-dark-on-success) !important;--s-color-success-container: var(--s-color-dark-success-container) !important;--s-color-on-success-container: var(--s-color-dark-on-success-container) !important;--s-color-warning: var(--s-color-dark-warning) !important;--s-color-on-warning: var(--s-color-dark-on-warning) !important;--s-color-warning-container: var(--s-color-dark-warning-container) !important;--s-color-on-warning-container: var(--s-color-dark-on-warning-container) !important}",
    Sr = "<slot></slot>",
    Qe = document.createElement("style");
  Qe.textContent =
    "::view-transition-old(root),::view-transition-new(root) { animation: none; mix-blend-mode: normal}";
  var Se = class extends h({
    style: qr,
    template: Sr,
    props: Cr,
    setup() {
      let t = getComputedStyle(this),
        e = matchMedia("(prefers-color-scheme: dark)"),
        r = () => {
          let i =
              t.getPropertyValue("--s-motion-easing-standard-accelerate") ||
              "cubic-bezier(0.3, 0, 1, 1)",
            l = t.getPropertyValue("--s-motion-duration-long4") || "600ms";
          return { easing: i, duration: k(l) };
        },
        a = () => (this.theme === "auto" ? e.matches : this.theme === "dark");
      return {
        expose: {
          toggle: (i, l) =>
            new Promise((n) => {
              if (this.theme === i) return;
              let d = e.matches,
                c = (y) => (y === "auto" ? (d ? "dark" : "light") : y),
                o = c(this.theme),
                f = c(i);
              if (o === f || !document.startViewTransition)
                return (this.theme = i), n();
              let x = innerWidth,
                m = innerHeight,
                p = {
                  clipPath: [
                    `circle(0px at 50% ${m / 2}px)`,
                    `circle(${Math.sqrt(x ** 2 + m ** 2) / 2}px at 50% ${
                      m / 2
                    }px)`,
                  ],
                };
              if (l && l.isConnected) {
                let { left: y, top: v } = l.getBoundingClientRect(),
                  b = y + l.offsetWidth / 2,
                  w = v + l.offsetHeight / 2,
                  q = Math.max(x - b, b),
                  $ = Math.max(m - w, w),
                  W = Math.sqrt(q ** 2 + $ ** 2);
                (p.clipPath[0] = `circle(0px at ${b}px ${w}px)`),
                  (p.clipPath[1] = `circle(${W}px at ${b}px ${w}px)`);
              }
              let u = document.startViewTransition(() => {
                (this.theme = i), document.head.appendChild(Qe);
              });
              u.ready.then(async () => {
                let y = document.documentElement.animate(p, {
                  ...r(),
                  pseudoElement: "::view-transition-new(root)",
                });
                n(y), await u.finished, Qe.remove();
              });
            }),
          get isDark() {
            return a();
          },
        },
        theme: (i) => {
          if (i === "light") return this.removeAttribute("dark");
          if (i === "dark") return this.setAttribute("dark", "");
          let l = () => {
            e.matches
              ? this.setAttribute("dark", "")
              : this.removeAttribute("dark"),
              this.dispatchEvent(new Event("change"));
          };
          (e.onchange = l), l();
        },
      };
    },
  }) {};
  Se.define(Er);
  var $r = "s-pagination",
    zr = g({
      $value: 1,
      $total: 20,
      $count: 20,
      type: ["standard", "outlined"],
    }),
    Tr =
      ":host{display:inline-flex;justify-content:center;align-items:center;font-size:.875rem;border-radius:18px;gap:4px;color:var(--s-color-on-surface, #191C1E)}:host([type=outlined]) :is(.icon-button,.button){border-width:1px;border-color:var(--s-color-outline-variant, #C0C8CC);border-style:solid}.container{display:flex;flex-wrap:wrap;gap:inherit;height:100%;border-radius:inherit;justify-content:space-evenly}.icon-button,.button{cursor:pointer;display:flex;justify-content:center;align-items:center;box-sizing:border-box;height:36px}.icon-button{border-radius:inherit;aspect-ratio:1;-webkit-aspect-ratio:1}.button{aspect-ratio:1;-webkit-aspect-ratio:1;padding:0 8px;border-radius:inherit;box-sizing:border-box}.checked{background:var(--s-color-secondary-container, #CFE6F1);color:var(--s-color-on-secondary-container, #354A53);border-color:var(--s-color-secondary, #4C616B)!important}.disabled{pointer-events:none;opacity:.38}.text{pointer-events:none;border:none!important}svg{width:24px;height:24px;padding:1px;box-sizing:border-box;fill:var(--s-color-on-surface-variant, #40484C)}",
    Lr =
      '<s-ripple class="prev icon-button disabled" part="prev"><svg viewBox="0 -960 960 960"><path d="M560-240 320-480l240-240 56 56-184 184 184 184-56 56Z"></path></svg></s-ripple><div class="container"><s-ripple class="button checked">1</s-ripple></div><s-ripple class="next icon-button disabled" part="next"><svg viewBox="0 -960 960 960"><path d="M504-480 320-664l56-56 240 240-240 240-56-56 184-184Z"></path></svg></s-ripple>',
    $e = class extends h({
      style: Tr,
      template: Lr,
      props: zr,
      setup(t) {
        let e = t.querySelector(".prev"),
          r = t.querySelector(".next"),
          a = t.querySelector(".container"),
          i = () => this.dispatchEvent(new Event("change")),
          l = () => {
            let d = Math.ceil(this.total / this.count),
              c = Math.max(Math.min(d - 7, Math.max(0, this.value - 4)), 0);
            if (
              (a.childNodes.forEach((o) => {
                c++;
                let f = o;
                (f.textContent = c.toString()),
                  f.classList.toggle("checked", this.value === c),
                  f.classList.remove("text");
              }),
              e.classList.toggle("disabled", this.value === 1),
              r.classList.toggle("disabled", this.value === d),
              d > 7)
            ) {
              if (this.value >= 5) {
                a.childNodes.item(0).textContent = "1";
                let o = a.childNodes.item(1);
                (o.textContent = "..."), o.classList.add("text");
              }
              if (this.value <= d - 4) {
                a.childNodes.item(a.childNodes.length - 1).textContent =
                  d.toString();
                let o = a.childNodes.item(a.childNodes.length - 2);
                (o.textContent = "..."), o.classList.add("text");
              }
            }
          },
          n = () => {
            let d = Math.ceil(this.total / this.count),
              c = Math.min(d, 7),
              o = document.createDocumentFragment();
            for (let f = 1; f <= c; f++) {
              let x = new z();
              x.classList.add("button"), o.appendChild(x);
            }
            (a.innerHTML = ""), a.appendChild(o), l();
          };
        return (
          (a.onclick = (d) => {
            if (!(d.target instanceof z)) return;
            let c = Number(d.target.textContent);
            c !== this.value && ((this.value = c), i());
          }),
          (e.onclick = () => {
            let d = Math.max(this.value - 1, 1);
            d !== this.value && ((this.value = d), i());
          }),
          (r.onclick = () => {
            let d = Math.min(
              this.value + 1,
              Math.ceil(this.total / this.count)
            );
            d !== this.value && ((this.value = d), i());
          }),
          { total: n, value: l }
        );
      },
    }) {};
  $e.define($r);
  var Je = "s-picker",
    Fr = g({ disabled: !1, $label: "", $value: "" }),
    Mr =
      ":host{display:inline-block;vertical-align:middle;font-size:.875rem;--picker-border-radius: 4px;--picker-border-color: var(--s-color-outline, #70787D);--picker-border-width: 1px;--picker-padding: 16px;--picker-height: 48px}:host([disabled=true]){pointer-events:none;opacity:.38}.popup{display:block;cursor:pointer;position:relative}.ripple{border-radius:var(--picker-border-radius)}.field{--field-border-radius: var(--picker-border-radius);--field-border-color: var(--picker-border-color);--field-border-width: var(--picker-border-width);--field-padding: var(--picker-padding);height:var(--picker-height);width:100%;position:relative}.view{width:100%;padding-top:0;padding-bottom:0;padding:0 var(--picker-padding)}svg{width:24px;height:24px;padding:2px;box-sizing:border-box;flex-shrink:0;margin-left:min(0px,calc((var(--picker-padding) * -1) + 4px));margin-right:max(0px,calc(var(--picker-padding) - 12px));fill:var(--s-color-on-surface-variant, #40484C)}.container{max-height:408px;box-sizing:border-box;display:flex;flex-direction:column;font-size:.875rem;padding:4px 0;gap:4px}",
    Ar =
      '<s-popup class="popup"><slot name="trigger" slot="trigger"><s-field fixed="false" class="field" part="field"><div class="label" slot="label"></div><div class="view"></div><svg viewBox="0 -960 960 960" slot="end"><path d="M480-360 280-560h400L480-360Z"></path></svg><s-ripple slot="custom" class="ripple" attached="true"></s-ripple></s-field></slot><s-scroll-view class="container" part="container"><slot id="slot"></slot></s-scroll-view></s-popup>',
    N = class extends h({
      style: Mr,
      template: Ar,
      props: Fr,
      setup(t) {
        let e = t.querySelector(".popup"),
          r = t.querySelector(".field"),
          a = t.querySelector(".label"),
          i = t.querySelector(".view"),
          l = t.querySelector("#slot"),
          n = t.querySelector(".container"),
          d = new S({ context: this, class: G, slot: l });
        return (
          e.addEventListener("show", () => {
            (r.focused = !0),
              (r.fixed = !0),
              d.select ||
                ((i.textContent = this.label), (i.style.opacity = "0")),
              (n.style.minWidth = `${this.offsetWidth}px`),
              d.select &&
                n.scrollTo({
                  top:
                    d.select.offsetTop -
                    n.offsetTop -
                    (n.offsetHeight / 2 - d.select.offsetHeight / 2),
                });
          }),
          (e.onclose = () => {
            (r.focused = !1), !d.select && (r.fixed = !1);
          }),
          e.addEventListener("closed", () =>
            n.style.removeProperty("min-width")
          ),
          (d.onUpdate = () => {
            if (!d.select) {
              (r.fixed = !1), (i.textContent = "");
              return;
            }
            (r.fixed = !0),
              i.style.removeProperty("opacity"),
              (i.textContent = d.select.textContent);
          }),
          (d.onSelect = () => e.close()),
          {
            expose: {
              get options() {
                return d.list;
              },
              get selectedIndex() {
                return d.selectedIndex;
              },
              get show() {
                return e.show;
              },
              get toggle() {
                return e.toggle;
              },
              get close() {
                return e.close;
              },
            },
            label: (c) => (a.textContent = c),
            value: { get: () => d.value, set: (c) => (d.value = c) },
          }
        );
      },
    }) {},
    Pr = "s-picker-item",
    Dr = g({ selected: !1, $value: "" }),
    Zr =
      ":host{display:flex;align-items:center;height:40px;margin:0 4px;cursor:pointer;position:relative;border-radius:4px;flex-shrink:0;padding:0 12px;color:var(--s-color-on-surface, #191C1E)}:host([selected=true]){background:var(--s-color-secondary-container, #CFE6F1);color:var(--s-color-on-secondary-container, #354A53)}.text{flex-grow:1;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}::slotted(:is(svg,s-icon)){color:var(--s-color-on-surface-variant, #40484C);fill:currentColor;height:24px;width:24px}:host([selected=true]) ::slotted(:is(svg,s-icon)){color:currentColor}::slotted([slot]){flex-shrink:0}::slotted([slot=start]){margin-left:-4px;margin-right:8px}::slotted([slot=end]){margin-left:8px;margin-right:-4px}",
    Br =
      '<slot name="start"></slot><div class="text" part="text"><slot></slot></div><slot name="end"></slot><s-ripple part="ripple" attached="true"></s-ripple>',
    G = class extends h({
      style: Zr,
      template: Br,
      props: Dr,
      setup() {
        return (
          this.addEventListener("click", () => {
            this.selected ||
              (this.parentNode instanceof N &&
                this.dispatchEvent(new Event(`${Je}:select`, { bubbles: !0 })));
          }),
          {
            selected: () => {
              this.parentNode instanceof N &&
                this.dispatchEvent(new Event(`${Je}:update`, { bubbles: !0 }));
            },
          }
        );
      },
    }) {};
  N.define(Je), G.define(Pr);
  var Nr = "s-popup",
    Hr = g({ align: ["center", "left", "right"] }),
    jr = L({ show: Event, showed: Event, closed: Event }),
    Ir =
      ":host{display:inline-block;vertical-align:middle;text-align:left}dialog{inset:0;width:100%;height:100%;background:none;border:none;padding:0;max-width:none;max-height:none;position:relative;overflow:hidden;color:inherit;outline:none}dialog::backdrop{background:none}.scrim{position:absolute;inset:0;width:100%;height:100%}.container{display:block;position:absolute;max-width:100%;max-height:100%;width:fit-content;height:fit-content;outline:none}::slotted(:not([slot])){border-radius:4px;max-width:inherit;max-height:inherit;box-shadow:var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));background:var(--s-color-surface-container, #ECEEF0)}",
    Wr =
      '<slot name="trigger"></slot><dialog class="popup" part="popup"><div class="scrim" part="scrim"></div><slot class="container" part="container"></slot></dialog>',
    Vr = (s, t, e, r) => {
      let a = { top: 0, left: 0, origin: [] },
        i = r === "center",
        l = i ? s.top + s.height : s.top,
        n = i ? s.top - e : s.top - e + s.height;
      if (l + e <= innerHeight) (a.top = l), (a.origin[1] = "top");
      else if (n >= 0) (a.top = n), (a.origin[1] = "bottom");
      else {
        let d = (innerHeight - e) / 2;
        (a.top = d), (a.origin[1] = `${s.top + s.height / 2 - d}px`);
      }
      if (i)
        (a.left = s.left - (t - s.width) / 2),
          (a.origin[0] = "center"),
          a.left < 0
            ? ((a.left = s.left), (a.origin[0] = `${s.width / 2}px`))
            : a.left + t > innerWidth &&
              ((a.left = s.left + s.width - t),
              (a.origin[0] = `${t - s.width + s.width / 2}px`));
      else {
        let d = (f) => {
            (a.left = s.left - t),
              (a.origin[0] = "right"),
              a.left < 0 && f && f();
          },
          c = (f) => {
            (a.left = s.left + s.width),
              (a.origin[0] = "left"),
              a.left + t > innerWidth && f && f();
          },
          o = () => {
            let f = (innerWidth - t) / 2;
            (a.left = f), (a.origin[0] = `${s.left + s.width / 2 - f}px`);
          };
        r === "left" ? d(() => c(o)) : c(() => d(o));
      }
      return a;
    },
    ze = class extends h({
      style: Ir,
      template: Wr,
      props: Hr,
      events: jr,
      setup(t) {
        let e = t.querySelector("dialog"),
          r = t.querySelector(".container"),
          a = getComputedStyle(this),
          i = () => {
            let c =
                a.getPropertyValue("--s-motion-easing-standard") ||
                "cubic-bezier(0.2, 0, 0, 1.0)",
              o = a.getPropertyValue("--s-motion-duration-medium4") || "400ms";
            return { easing: c, duration: k(o) };
          },
          l = (c) => {
            if (!this.isConnected || e.open) return;
            let o = { top: 0, left: 0, origin: [] };
            if (
              (e.showModal(),
              !this.dispatchEvent(new Event("show", { cancelable: !0 })))
            )
              return e.close();
            (r.style.maxHeight = `${innerHeight}px`),
              (r.style.maxWidth = `${innerWidth}px`);
            let f = r.offsetWidth,
              x = r.offsetHeight;
            if (!c || c instanceof HTMLElement) {
              let p = (c ?? this).getBoundingClientRect(),
                u = Vr(p, f, x, this.align);
              (o.top = u.top), (o.left = u.left), (o.origin = u.origin);
            } else
              (o.top = c.y),
                (o.left = c.x),
                (o.origin = c.origin?.split(" ") ?? ["left", "top"]),
                c.x + f > innerWidth &&
                  ((o.left = c.x - f), (o.origin[0] = "right")),
                c.y + x > innerHeight &&
                  ((o.top = c.y - x), (o.origin[1] = "bottom"));
            (r.style.transformOrigin = o.origin.join(" ")),
              (r.style.top = `${o.top}px`),
              (r.style.left = `${o.left}px`);
            let m = r.animate(
              { transform: ["scale(.9)", "scale(1)"], opacity: [0, 1] },
              i()
            );
            this.setAttribute("showed", ""),
              m.finished.then(() => this.dispatchEvent(new Event("showed")));
          },
          n = () => {
            if (
              !this.isConnected ||
              !e.open ||
              r.getAnimations().length > 0 ||
              !this.dispatchEvent(new Event("close", { cancelable: !0 }))
            )
              return;
            let c = r.animate(
              { transform: ["scale(1)", "scale(.9)"], opacity: [1, 0] },
              i()
            );
            this.removeAttribute("showed"),
              c.finished.then(() => {
                e.close(), this.dispatchEvent(new Event("closed"));
              });
          },
          d = (c) => (e.open ? n() : l(c));
        return (
          t
            .querySelector("slot[name=trigger]")
            .addEventListener("click", () => l()),
          t.querySelector(".scrim").addEventListener("pointerdown", n),
          {
            expose: { show: l, toggle: d, close: n },
            onMounted: () => addEventListener("resize", n),
            onUnmounted: () => removeEventListener("resize", n),
          }
        );
      },
    }) {};
  ze.define(Nr);
  var Ke = "s-popup-menu",
    Yr = g({ group: ["", "start", "end"] }),
    Rr =
      ":host{display:inline-block;vertical-align:middle;font-size:.875rem}.popup{display:block}.container{box-sizing:border-box;padding:4px 0;max-width:224px;min-height:auto;display:flex;flex-direction:column;gap:4px}::slotted(s-popup-menu[group=start]){border-top:solid 1px var(--s-color-outline-variant, #C0C8CC);margin-top:4px;padding-top:4px}::slotted(s-popup-menu[group=end]){border-bottom:solid 1px var(--s-color-outline-variant, #C0C8CC);margin-bottom:4px;padding-bottom:4px}",
    _r =
      '<s-popup class="popup"><slot slot="trigger" name="trigger"></slot><s-scroll-view class="container" part="container"><slot></slot></s-scroll-view></s-popup>',
    Te = class s extends h({
      style: Rr,
      template: _r,
      props: Yr,
      setup(t) {
        let e = t.querySelector(".popup"),
          r = t.querySelector("slot[name=trigger]");
        return (
          (r.onclick = (a) => {
            a.stopPropagation(), e.show();
          }),
          this.addEventListener(`${Ke}:click`, (a) => {
            a.stopPropagation(), e.close();
          }),
          (e.onclose = (a) => {
            let i = a.target;
            if (i.parentNode instanceof ShadowRoot) {
              let l = i.parentNode.host;
              l.parentNode instanceof s && l.parentNode.close();
            }
          }),
          {
            onMounted: () => {
              this.parentNode instanceof s && e.setAttribute("align", "right");
            },
            expose: {
              get show() {
                return e.show;
              },
              get toggle() {
                return e.toggle;
              },
              get close() {
                return e.close;
              },
            },
          }
        );
      },
    }) {},
    Or = "s-popup-menu-item",
    Xr =
      ":host{display:flex;align-items:center;height:40px;margin:0 4px;padding:0 12px;cursor:pointer;position:relative;border-radius:4px;color:var(--s-color-on-surface, #191C1E)}.text{flex-grow:1;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}::slotted(:is(svg,s-icon)){fill:currentColor;height:24px;width:24px;color:var(--s-color-on-surface-variant, #40484C)}::slotted([slot]){flex-shrink:0}::slotted([slot=start]){margin-left:-4px;margin-right:8px}::slotted([slot=end]){margin-left:8px;margin-right:-6px}",
    Gr =
      '<slot name="start"></slot><div class="text" part="text"><slot></slot></div><slot name="end"></slot><s-ripple attached="true"></s-ripple>',
    Le = class extends h({
      style: Xr,
      template: Gr,
      setup() {
        this.addEventListener("click", () =>
          this.dispatchEvent(new Event(`${Ke}:click`, { bubbles: !0 }))
        );
      },
    }) {};
  Te.define(Ke), Le.define(Or);
  var Ur = "s-radio-button",
    Qr = g({ disabled: !1, checked: !1, name: "", $value: "" }),
    Jr =
      ":host{display:inline-flex;vertical-align:middle;align-items:center;cursor:pointer;position:relative;height:40px;color:var(--s-color-on-surface-variant, #40484C)}:host([checked=true]){color:var(--s-color-primary, #006782)}:host([disabled=true]){pointer-events:none}.container{position:relative;height:100%;aspect-ratio:1;-webkit-aspect-ratio:1;border-radius:50%;overflow:hidden;flex-shrink:0}:host([disabled=true]) .container{color:var(--s-color-on-surface, #191C1E)!important;opacity:.38!important}.unchecked,.checked{display:flex;align-items:center;justify-content:center;position:absolute;left:0;top:0;width:100%;height:100%}.checked{position:absolute;transform:scale(.5);opacity:0;transition-property:transform,opacity;transition-timing-function:var(--s-motion-easing-emphasized, cubic-bezier(.2, 0, 0, 1));transition-duration:var(--s-motion-duration-short4, .2s)}:host([checked=true]:not([indeterminate=true])) .checked{opacity:1;transform:scale(1)}.dot{width:60%;height:60%;transform:scale(.4);background:currentColor;border-radius:50%}.ripple{aspect-ratio:1;-webkit-aspect-ratio:1;height:100%;width:auto;border-radius:50%}svg,::slotted(:is([slot=checked],[slot=unchecked])){color:currentColor;fill:currentColor;width:60%;height:60%}",
    Kr =
      '<div class="container" part="container"><slot class="unchecked" name="unchecked"><svg viewBox="0 -960 960 960"><path d="M480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z"></path></svg></slot><slot class="checked" name="checked"><div class="dot"></div></slot></div><slot></slot><s-ripple class="ripple" attached="true" part="ripple"></s-ripple>',
    Fe = class extends h({
      style: Jr,
      template: Kr,
      props: Qr,
      setup() {
        this.addEventListener("click", () => {
          (this.checked = !0),
            this.name &&
              document
                .querySelectorAll(`${this.tagName}[name='${this.name}']`)
                .forEach((t) => {
                  t !== this && (t.checked = !1);
                }),
            this.dispatchEvent(new Event("change"));
        });
      },
    }) {};
  Fe.define(Ur);
  var es = "s-rate",
    U = g({ readOnly: !1, $max: 10, $min: 0, $value: 5, $step: 1 }),
    ts =
      ":host{display:inline-flex;vertical-align:middle;overflow:hidden;position:relative;font-size:24px;width:5em;height:1em}.track{width:100%;display:flex}.track svg,::slotted([slot=track]){fill:var(--s-color-secondary-container, #CFE6F1);filter:drop-shadow(1em 0 0 var(--s-color-secondary-container, #CFE6F1)) drop-shadow(2em 0 0 var(--s-color-secondary-container, #CFE6F1)) drop-shadow(3em 0 0 var(--s-color-secondary-container, #CFE6F1))}.indicator{position:absolute;left:0;top:0;height:100%;width:50%;overflow:hidden;display:flex}.indicator svg,::slotted([slot=indicator]){fill:var(--s-color-primary, #006782);filter:drop-shadow(1em 0 0 var(--s-color-primary, #006782)) drop-shadow(2em 0 0 var(--s-color-primary, #006782)) drop-shadow(3em 0 0 var(--s-color-primary, #006782)) drop-shadow(4em 0 0 var(--s-color-primary, #006782))}svg,::slotted(*){height:100%;aspect-ratio:1;-webkit-aspect-ratio:1;flex-shrink:0}input{position:absolute;left:0;top:0;height:100%;width:100%;cursor:pointer;opacity:0;margin:0}:host([readonly=true]) input{display:none}",
    os = `<slot name="track" class="track" part="track"><svg viewBox="0 -960 960 960"><path d="m354-287 126-76 126 77-33-144 111-96-146-13-58-136-58 135-146 13 111 97-33 143ZM233-120l65-281L80-590l288-25 112-265 112 265 288 25-218 189 65 281-247-149-247 149Zm247-350Z"/></svg></slot><slot name="indicator" class="indicator" part="indicator"><svg viewBox="0 -960 960 960"><path d="m233-120 65-281L80-590l288-25 112-265 112 265 288 25-218 189 65 281-247-149-247 149Z"/></svg></slot><input type="range" max="${U.max}" min="${U.min}" step="${U.step}" value="${U.value}">`,
    Me = class extends h({
      style: ts,
      template: os,
      props: U,
      setup(t) {
        let e = t.querySelector(".indicator"),
          r = t.querySelector("input"),
          a = () => {
            let i = ((Number(r.value) - this.min) * 100) / this.max - this.min;
            e.style.width = `${i}%`;
          };
        return (
          (r.onchange = () => this.dispatchEvent(new Event("change"))),
          (r.oninput = () => {
            (this.value = Number(r.value)),
              this.dispatchEvent(new Event("input"));
          }),
          {
            max: (i) => {
              (r.max = String(i)), a();
            },
            min: (i) => {
              (r.min = String(i)), a();
            },
            step: (i) => {
              (r.step = String(i)), a();
            },
            value: (i) => {
              (r.value = String(i)), a();
            },
          }
        );
      },
    }) {};
  Me.define(es);
  var rs = "s-search",
    ss = g({
      $placeholder: "",
      disabled: !1,
      $value: "",
      $maxLength: -1,
      readOnly: !1,
    }),
    is =
      ":host{display:inline-flex;vertical-align:middle;min-height:40px;width:220px;border-radius:20px;font-size:.875rem;position:relative;background:var(--s-color-surface-container-low, #F2F4F5);color:var(--s-color-on-surface, #191C1E);--search-outline-width: 1px;--search-outline-color: var(--s-color-surface-variant, #DCE4E8)}.wrapper{display:grid;position:relative;border-radius:inherit;overflow:hidden;background:inherit;min-height:inherit;flex-grow:1;width:100%;box-shadow:0 0 0 var(--search-outline-width) var(--search-outline-color)}:host(:focus-within) .wrapper{position:absolute}.container{display:flex;align-items:center;position:relative;min-height:inherit}input{border:none;padding:0 16px;height:100%;width:0;flex-grow:1;background:none;outline:none;font-size:inherit;color:inherit;box-sizing:border-box;line-height:1;font-family:inherit;caret-color:var(--s-color-primary, #006782)}input::placeholder{color:var(--s-color-outline, #70787D)}input::selection{background:var(--s-color-primary, #006782);color:var(--s-color-on-primary, #ffffff)}::slotted([slot=dropdown]){position:absolute;pointer-events:none;left:0;height:0;opacity:0;border-top:solid 1px var(--s-color-surface-variant, #DCE4E8);height:auto}:host(:focus-within) ::slotted([slot=dropdown]){pointer-events:auto;position:relative;opacity:1}::slotted([slot]){flex-shrink:0}.clear{display:none;align-items:center;justify-content:center;height:40px;width:40px;border-radius:50%}svg,::slotted(svg){height:24px;width:24px;fill:var(--s-color-on-surface-variant, #40484C)}.icon,::slotted(:is(s-icon[slot=start],svg[slot=start])){margin:0 -8px 0 8px}::slotted(:is(s-icon[slot=end],svg[slot=end])){margin:0 8px 0 -8px}::slotted(s-icon-button[slot=start]){margin-right:-16px}.clear,::slotted(s-icon-button[slot=end]){margin-left:-16px}",
    as =
      '<div class="wrapper" part="wrapper"><div class="container" part="container"><slot name="start"><svg viewBox="0 -960 960 960" class="icon"><path d="M784-120 532-372q-30 24-69 38t-83 14q-109 0-184.5-75.5T120-580q0-109 75.5-184.5T380-840q109 0 184.5 75.5T640-580q0 44-14 83t-38 69l252 252-56 56ZM380-400q75 0 127.5-52.5T560-580q0-75-52.5-127.5T380-760q-75 0-127.5 52.5T200-580q0 75 52.5 127.5T380-400Z"></path></svg></slot><input type="text"><slot name="end"><s-ripple class="clear"><svg viewBox="0 -960 960 960"><path d="m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z"></path></svg></s-ripple></slot></div><slot name="dropdown"></slot></div>',
    Ae = class extends h({
      style: is,
      template: as,
      props: ss,
      setup(t) {
        let e = t.querySelector("input"),
          r = t.querySelector(".clear"),
          a = t.querySelector("[name=dropdown]"),
          i = () => (r.style.display = e.value === "" ? "none" : "flex");
        return (
          (a.onmousedown = (l) => l.preventDefault()),
          (e.onchange = () => this.dispatchEvent(new Event("change"))),
          (r.onclick = () => {
            (e.value = ""),
              i(),
              this.dispatchEvent(new Event("input")),
              this.dispatchEvent(new Event("change"));
          }),
          (e.oninput = i),
          {
            expose: {
              get native() {
                return e;
              },
            },
            value: {
              get: () => e.value,
              set: (l) => {
                (e.value = l), i();
              },
            },
            placeholder: (l) => (e.placeholder = l),
            maxLength: (l) => (e.maxLength = l),
            readOnly: (l) => (e.readOnly = l),
          }
        );
      },
    }) {};
  Ae.define(rs);
  var et = "s-segmented-button",
    ns = g({ $value: "", mode: ["auto", "fixed"] }),
    ls =
      ":host{display:inline-flex;vertical-align:middle;align-items:center;border-radius:20px;height:40px;padding:3px;overflow:hidden;box-sizing:border-box;border:solid 1px var(--s-color-surface-variant, #C0C8CC);background:var(--s-color-surface-container, #ECEEF0)}:host([mode=fixed]){display:flex}:host([mode=fixed]) ::slotted(s-segmented-button-item){flex-basis:100%}",
    cs = "<slot></slot>",
    H = class extends h({
      style: ls,
      template: cs,
      props: ns,
      setup(t) {
        let e = t.querySelector("slot"),
          r = new S({ context: this, class: Q, slot: e }),
          a = getComputedStyle(this),
          i = () => {
            let l =
                a.getPropertyValue("--s-motion-easing-standard") ||
                "cubic-bezier(0.2, 0, 0, 1.0)",
              n = a.getPropertyValue("--s-motion-duration-medium4") || "400ms";
            return { easing: l, duration: k(n) };
          };
        return (
          (r.onUpdate = (l) => {
            if (!l || !r.select || !this.isConnected) return;
            let n = l.shadowRoot
                .querySelector(".indicator")
                .getBoundingClientRect(),
              d = r.select.shadowRoot.querySelector(".indicator"),
              c = d.getBoundingClientRect(),
              o = n.left - c.left;
            (d.style.transform = `translateX(${
              c.left > n.left ? o : Math.abs(o)
            }px)`),
              (d.style.width = `${n.width}px`),
              (l.style.zIndex = "1");
            let f = d.animate(
              [{ transform: "translateX(0)", width: `${c.width}px` }],
              i()
            );
            f.onfinish =
              f.oncancel =
              f.onremove =
                () => {
                  d.style.removeProperty("transform"),
                    d.style.removeProperty("width"),
                    l.style.removeProperty("z-index");
                };
          }),
          {
            expose: {
              get options() {
                return r.list;
              },
              get selectedIndex() {
                return r.selectedIndex;
              },
            },
            value: { get: () => r.value, set: (l) => (r.value = l) },
          }
        );
      },
    }) {},
    ds = "s-segmented-button-item",
    ps = g({ selected: !1, disabled: !1, selectable: !0, $value: "" }),
    hs =
      ":host{display:flex;justify-content:center;align-items:center;height:100%;min-width:64px;padding:0 16px;text-transform:capitalize;cursor:pointer;font-weight:500;font-size:.8125rem;position:relative;box-sizing:border-box;border-radius:20px;transition:color var(--s-motion-duration-medium4, .4s) var(--s-motion-easing-standard, cubic-bezier(.2, 0, 0, 1));color:var(--s-color-on-surface, #191C1E)}:host([selected=true]){color:var(--s-color-on-primary, #ffffff)}:host([disabled=true]){pointer-events:none;color:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 38%,transparent)}.indicator{position:absolute;left:0;top:0;width:100%;height:100%;opacity:0;border-radius:inherit;background:var(--s-color-primary, #006782)}:host([selected=true]) .indicator{opacity:1}::slotted([slot]){width:18px;height:18px;color:inherit;fill:currentColor;flex-shrink:0;position:relative}::slotted([slot=start]){margin-right:4px}::slotted([slot=end]){margin-right:4px}.text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;min-width:0;position:relative}@supports not (color: color-mix(in srgb,black,white)){:host([disabled=true]){opacity:.38;color:var(--s-color-on-surface, #191C1E)}}",
    us =
      '<div class="indicator" part="indicator"></div><slot name="start"></slot><div class="text" part="text"><slot></slot></div><slot name="end"></slot><s-ripple attached="true" part="ripple"></s-ripple>',
    Q = class extends h({
      style: hs,
      template: us,
      props: ps,
      setup() {
        return (
          this.addEventListener("click", () => {
            !(this.parentNode instanceof H) ||
              this.selected ||
              (this.selectable &&
                this.dispatchEvent(new Event(`${et}:select`, { bubbles: !0 })));
          }),
          {
            selected: () => {
              this.parentNode instanceof H &&
                this.dispatchEvent(
                  new CustomEvent(`${et}:update`, { bubbles: !0, detail: {} })
                );
            },
          }
        );
      },
    }) {};
  H.define(et), Q.define(ds);
  var ms = "s-skeleton",
    gs =
      ":host{display:block;height:16px;animation:skeleton var(--s-motion-duration-extra-long4, 1s) var(--s-motion-easing-standard, cubic-bezier(.2, 0, 0, 1)) infinite;background:linear-gradient(90deg,var(--s-color-surface-container-high, #E7E8EA) 25%,var(--s-color-surface-container-highest, #E1E3E4) 37%,var(--s-color-surface-container-high, #E7E8EA) 63%);background-size:400% 100%;border-radius:8px}@keyframes skeleton{0%{background-position:100% 50%}to{background-position:0 50%}}",
    Pe = class extends h({ style: gs }) {};
  Pe.define(ms);
  var fs = "s-slider",
    j = g({
      disabled: !1,
      $labeled: !1,
      $max: 100,
      $min: 0,
      $step: 1,
      $value: 0,
    }),
    xs =
      ':host{display:block;color:var(--s-color-primary, #006782);height:16px;cursor:pointer;position:relative}:host([disabled=true]){pointer-events:none;color:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 38%,transparent)!important}.container{height:100%;display:flex;align-items:center;position:relative;pointer-events:none}.track,.indicator{height:4px;border-radius:2px;position:absolute;right:0}.track{background:var(--s-color-secondary-container, #CFE6F1);width:calc(100% - 20px)}:host([disabled=true]) .track{background:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 12%,transparent)!important}.indicator{left:0;width:0;background:currentColor}.handle{position:relative;height:16px;width:16px;flex-shrink:0;display:flex;justify-content:center}.thumb{position:relative;height:100%;width:100%;border-radius:50%;background:currentColor;box-shadow:var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12))}.thumb:before{content:"";position:absolute;left:-10px;top:-10px;width:36px;height:36px;border-radius:50%;background:color-mix(in srgb,currentColor 20%,transparent);transform:scale(0);transition:transform var(--s-motion-duration-short4, .2s) var(--s-motion-easing-standard, cubic-bezier(.2, 0, 0, 1))}.active .thumb:before{transform:scale(1)}.label{position:absolute;bottom:100%;margin-bottom:12px;background:var(--s-color-inverse-surface, #2E3132);color:var(--s-color-inverse-on-surface, #EFF1F3);justify-content:center;align-items:center;border-radius:4px;padding:0 6px;height:24px;font-size:.75rem;transform:scale(0);transform-origin:center bottom;transition:transform var(--s-motion-duration-short4, .2s) var(--s-motion-easing-standard, cubic-bezier(.2, 0, 0, 1));opacity:.85;z-index:1;display:none}.active .label{transform:scale(1)}:host([labeled=true]) .label{display:flex}input{margin:0;height:100%;width:100%;cursor:inherit;opacity:0;position:absolute;top:0;left:0}@supports not (color: color-mix(in srgb,black,white)){:host([disabled=true]){color:var(--s-color-on-surface, #191C1E)!important}:host([disabled=true]) .track{background:var(--s-color-surface-container-high, #E7E8EA)!important}:host([disabled=true]) .thumb{opacity:.38}}',
    vs = `<div class="container" part="container"><div class="indicator" part="indicator"></div><div class="track" part="track"></div><div class="handle" part="handle"><div class="thumb" part="thumb"></div><div class="label" part="label">${j.value}</div></div></div><input type="range" max="${j.max}" min="${j.min}" step="${j.step}" value="${j.value}">`,
    De = class extends h({
      style: xs,
      template: vs,
      props: j,
      setup(t) {
        let e = t.querySelector(".container"),
          r = t.querySelector(".indicator"),
          a = t.querySelector(".track"),
          i = t.querySelector(".handle"),
          l = t.querySelector(".label"),
          n = t.querySelector("input"),
          d = () => {
            let c = Number(n.value),
              o = ((c - this.min) * 100) / (this.max - this.min);
            (i.style.left = `calc(${o}% - ${o * 0.16}px)`),
              (r.style.width = `calc(${o}% - ${4 + o * 0.16}px)`),
              (a.style.width = `calc(${100 - o}% - ${20 - o * 0.16}px)`),
              (l.textContent = String(c));
          };
        return (
          (n.onchange = () => this.dispatchEvent(new Event("change"))),
          (n.oninput = () => {
            (this.value = Number(n.value)),
              this.dispatchEvent(new Event("input"));
          }),
          (n.onmousedown = (c) =>
            c.button === 0 &&
            E.pointerFine.matches &&
            e.classList.add("active")),
          (n.onmouseup = () =>
            E.pointerFine.matches && e.classList.remove("active")),
          (n.ontouchstart = () =>
            E.pointerCoarse.matches && e.classList.add("active")),
          (n.ontouchend = () =>
            E.pointerCoarse.matches && e.classList.remove("active")),
          (n.ontouchcancel = () =>
            E.pointerCoarse.matches && e.classList.remove("active")),
          {
            max: (c) => {
              (n.max = String(c)), d();
            },
            min: (c) => {
              (n.min = String(c)), d();
            },
            step: (c) => {
              (n.step = String(c)), d();
            },
            value: (c) => {
              (n.value = String(c)), d();
            },
          }
        );
      },
    }) {};
  De.define(fs);
  var Ze = document.createElement("div");
  Ze.setAttribute(
    "style",
    "position: fixed;right: 0;bottom: 0;width: 100%;height: 100%;pointer-events: none"
  );
  var Be = (s) => {
    s.appendChild(Ze);
    let t = Ze.getBoundingClientRect();
    return (
      s.removeChild(Ze),
      { left: t.left, top: t.top, width: t.width, height: t.height }
    );
  };
  var bs = "s-snackbar",
    ys = g({
      type: ["none", "info", "success", "warning", "error"],
      align: ["auto", "top", "bottom"],
      $duration: 4e3,
    }),
    ws = L({ show: Event, showed: Event, closed: Event }),
    ks =
      ":host{display:inline-block;vertical-align:middle}.popup{position:fixed;inset:0;width:100%;height:100%;background:none;border:none;outline:none;max-width:none;max-height:none;display:none;overflow:hidden;box-sizing:border-box;pointer-events:none;padding:16px;justify-content:center;transition:transform var(--s-motion-duration-medium4, .4s) var(--s-motion-easing-standard, cubic-bezier(.2, 0, 0, 1))}.popup.show{display:flex}.container{outline:none;align-self:flex-end;width:fit-content;display:flex;align-items:center;min-height:48px;line-height:22px;border-radius:4px;padding:6px 16px;font-size:.875rem;font-weight:500;box-sizing:border-box;max-width:320px;transition:box-shadow var(--s-motion-duration-medium4, .4s) var(--s-motion-easing-standard, cubic-bezier(.2, 0, 0, 1));box-shadow:var(--s-elevation-level3, 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12));background:var(--s-color-inverse-surface, #2E3132);color:var(--s-color-inverse-on-surface, #EFF1F3)}.text{flex-grow:1;min-width:0;user-select:text;-webkit-user-select:text}.icon{display:none}:host([type=info]) .info,:host([type=success]) .success,:host([type=warning]) .warning,:host([type=error]) .error{display:block}:host([type=info]) .container{color:var(--s-color-on-secondary, #ffffff);background:var(--s-color-secondary, #4C616B)}:host([type=success]) .container{color:var(--s-color-on-success, #ffffff);background:var(--s-color-success, #006d43)}:host([type=warning]) .container{color:var(--s-color-on-warning, #ffffff);background:var(--s-color-warning, #6f5d00)}:host([type=error]) .container{color:var(--s-color-on-error, #ffffff);background:var(--s-color-error, #BA1A1A)}:host([type=info]) ::slotted([slot=action]),:host([type=success]) ::slotted([slot=action]),:host([type=warning]) ::slotted([slot=action]),:host([type=error]) ::slotted([slot=action]){color:currentColor}svg,::slotted([slot=icon]){width:24px;height:24px;color:currentColor;fill:currentColor;margin-right:12px;margin-left:-4px}::slotted([slot=action]){font-size:inherit;flex-shrink:0;display:inline-flex;align-items:center;padding:0 12px;border-radius:4px;margin-right:-8px;margin-left:12px;cursor:pointer;height:36px;font-size:.875rem;color:var(--s-color-inverse-primary, #60D4FE)}@media (max-width: 375px){.popup{padding:8px}}@media (pointer: fine){.container:hover{box-shadow:var(--s-elevation-level4, 0 8px 10px -5px rgba(0, 0, 0, .2), 0 16px 24px 2px rgba(0, 0, 0, .14), 0 6px 30px 5px rgba(0, 0, 0, .12))}}",
    Es =
      '<slot name="trigger"></slot><div class="popup" popover="manual" part="popup"><div class="container" part="container"><slot name="icon"><svg viewBox="0 0 24 24" class="icon info"><path d="M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"></path></svg> <svg viewBox="0 0 24 24" class="icon success"><path d="M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"></path></svg> <svg viewBox="0 0 24 24" class="icon warning"><path d="M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"></path></svg> <svg viewBox="0 0 24 24" class="icon error"><path d="M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"></path></svg></slot><div class="text" part="text"><slot></slot></div><slot name="action"></slot></div></div>',
    Cs = (s) => {
      let t = document.body,
        e = new J();
      e.style.display = "block";
      let r = document.body.firstElementChild;
      if ((r && r.tagName === "S-PAGE" && (t = r), typeof s == "string"))
        e.textContent = s;
      else {
        if (
          (s.root && (t = s.root),
          s.align && (e.align = s.align),
          s.icon &&
            (s.icon instanceof Element &&
              ((s.icon.slot = "icon"), e.appendChild(s.icon)),
            typeof s.icon == "string" && (e.innerHTML = s.icon)),
          e.append(s.text),
          s.type && (e.type = s.type),
          s.action)
        ) {
          let a = document.createElement("s-button");
          (a.type = "text"),
            (a.slot = "action"),
            typeof s.action == "string"
              ? (a.textContent = s.action)
              : ((a.textContent = s.action.text),
                a.addEventListener("click", s.action.click)),
            e.appendChild(a);
        }
        typeof s.duration == "number" && (e.duration = s.duration);
      }
      return (
        t.appendChild(e),
        e.addEventListener("closed", () => t.removeChild(e)),
        e.show(),
        e
      );
    },
    lt = { top: [], bottom: [] },
    J = class extends h({
      style: ks,
      template: Es,
      props: ys,
      events: ws,
      methods: { builder: Cs },
      setup(t) {
        let e = t.querySelector(".popup"),
          r = t.querySelector(".container"),
          a = getComputedStyle(this),
          i = () => {
            let o =
                a.getPropertyValue("--s-motion-easing-standard") ||
                "cubic-bezier(0.2, 0, 0, 1.0)",
              f = a.getPropertyValue("--s-motion-duration-medium4") || "400ms";
            return { easing: o, duration: k(f) };
          },
          l = { timer: 0, gap: 8 },
          n = () =>
            this.align === "auto"
              ? E.pointerCoarse.matches
                ? "top"
                : "bottom"
              : this.align,
          d = () => {
            if (!this.isConnected || e.classList.contains("show")) return;
            if ((e.classList.add("show"), e.showPopover)) e.showPopover();
            else {
              let u = Be(t);
              (e.style.width = `${innerWidth}px`),
                (e.style.height = `${innerHeight}px`),
                (e.style.marginLeft = `${-u.left}px`),
                (e.style.marginTop = `${-u.top}px`),
                (e.style.zIndex = "3");
            }
            let o = n();
            r.style.alignSelf = { top: "flex-start", bottom: "flex-end" }[o];
            let f = lt[o],
              x = { top: 1, bottom: -1 }[o],
              m = r.offsetHeight + l.gap;
            for (let u of f)
              (u.style.transform = `translateY(${m * x}px)`),
                (m += u.firstElementChild.offsetHeight + l.gap);
            let p = r.animate(
              {
                opacity: [0, 1],
                transform: [`translateY(calc(${x * -100}% + 16px))`, ""],
                pointerEvents: "auto",
              },
              { ...i(), fill: "forwards" }
            );
            this.dispatchEvent(new Event("show")),
              this.duration > 0 && (l.timer = setTimeout(c, this.duration)),
              (e.dataset.align = o),
              f.unshift(e),
              p.finished.then(() => this.dispatchEvent(new Event("showed")));
          },
          c = () => {
            if (!this.isConnected || !e.classList.contains("show")) return;
            clearTimeout(l.timer);
            let o = e.dataset.align,
              f = lt[o],
              x = { top: 1, bottom: -1 }[o],
              m = f.indexOf(e);
            for (let u = m + 1; u < f.length; u++) {
              let y = f[u],
                v = Math.abs(Number(y.style.transform.slice(11).slice(0, -3)));
              y.style.transform = `translateY(${
                (v - r.offsetHeight - l.gap) * x
              }px)`;
            }
            let p = r.animate(
              {
                opacity: [1, 0],
                transform: `translateY(calc(${x * -100}% + 16px))`,
              },
              i()
            );
            this.dispatchEvent(new Event("close")),
              p.finished.then(() => {
                e.hidePopover && e.hidePopover(),
                  e.removeAttribute("style"),
                  e.classList.remove("show"),
                  this.dispatchEvent(new Event("closed"));
              }),
              f.splice(m, 1);
          };
        return (
          (r.onmouseenter = () => clearTimeout(l.timer)),
          (r.onmouseleave = () =>
            e.classList.contains("show") &&
            this.duration > 0 &&
            (l.timer = setTimeout(c, this.duration))),
          (t.querySelector("slot[name=trigger]").onclick = d),
          (t.querySelector("slot[name=action]").onclick = c),
          { expose: { show: d, close: c } }
        );
      },
    }) {};
  J.define(bs);
  var qs = "s-switch",
    Ss = g({ disabled: !1, checked: !1 }),
    $s =
      ":host{display:inline-flex;vertical-align:middle;align-items:center;position:relative;cursor:pointer;color:var(--s-color-primary, #006782);width:52px;aspect-ratio:1.625;-webkit-aspect-ratio:1.625;border-radius:16px}:host([disabled=true]){pointer-events:none}.track{width:100%;height:100%;border:solid 2px var(--s-color-outline, #70787D);box-sizing:border-box;border-radius:inherit}:host([disabled=true]) .track{border-color:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 12%,transparent)!important}:host([checked=true]) .track{border-width:0;background:currentColor}:host([disabled=true][checked=true]) .track{background:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 12%,transparent)!important}.ripple{height:125%;width:auto;aspect-ratio:1;-webkit-aspect-ratio:1;border-radius:50%;inset:auto;transition:transform var(--s-motion-duration-short4, .2s) var(--s-motion-easing-emphasized, cubic-bezier(.2, 0, 0, 1));display:flex;justify-content:center;align-items:center;box-sizing:border-box;color:var(--s-color-outline, #70787D);transform:translate(-10%)}:host([checked=true]) .ripple{transform:translate(40%);color:currentColor}.thumb{background:var(--s-color-outline, #70787D);border-radius:50%;width:40%;height:40%;transition:transform var(--s-motion-duration-short4, .2s) var(--s-motion-easing-emphasized, cubic-bezier(.2, 0, 0, 1));position:relative}:host([disabled=true]) .thumb{background:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 38%,transparent)}:host([checked=true]) .thumb{background:var(--s-color-on-primary, #ffffff);transform:scale(1.5);box-shadow:var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12))}:host([disabled=true][checked=true]) .thumb{background:var(--s-color-surface, #F8F9FB);box-shadow:none}.icon{display:flex;height:100%;justify-content:center;align-items:center;opacity:0;transition:opacity var(--s-motion-duration-short4, .2s) var(--s-motion-easing-emphasized, cubic-bezier(.2, 0, 0, 1));color:currentColor}::slotted([slot=icon]),svg{color:currentColor;fill:currentColor;width:70%;height:70%}:host([checked=true]) .icon{opacity:1}:host([checked=true][disabled=true]) .icon{color:color-mix(in srgb,var(--s-color-on-surface, #191C1E) 12%,transparent)}@supports not (color: color-mix(in srgb,black,white)){:host([disabled=true]) .track{border-color:var(--s-color-surface-container-highest, #E1E3E4)!important}:host([disabled=true][checked=true]) .track{background:var(--s-color-surface-container-highest, #E1E3E4)!important}:host([disabled=true]) .thumb{background:var(--s-color-surface-container-highest, #E1E3E4)!important}:host([disabled=true][checked=true]) .thumb{background:var(--s-color-surface, #F8F9FB)!important}}",
    zs =
      '<div class="track" part="track"></div><s-ripple attached="true" class="ripple" part="ripple"><div class="thumb" part="thumb"><slot name="icon" class="icon"></slot></div></s-ripple>',
    Ne = class extends h({
      style: $s,
      template: zs,
      props: Ss,
      setup() {
        this.addEventListener("click", () => {
          (this.checked = !this.checked),
            this.dispatchEvent(new Event("change"));
        });
      },
    }) {};
  Ne.define(qs);
  var tt = "s-tab",
    Ts = g({ mode: ["scrollable", "fixed"], $value: "" }),
    Ls =
      ':host{display:flex;justify-content:flex-start;position:relative;background:var(--s-color-surface, #F8F9FB);color:var(--s-color-on-surface-variant, #40484C)}:host:before{content:"";position:absolute;width:100%;border-bottom:solid 1px var(--s-color-surface-variant, #DCE4E8);bottom:0;left:0}.container{display:flex;justify-content:flex-start;align-items:center;position:relative;scrollbar-width:none;overflow-x:auto}.container::-webkit-scrollbar{display:none}:host([mode=fixed]) .container{overflow:hidden;width:100%}::slotted(s-tab-item){flex-shrink:0;flex-basis:auto}:host([mode=fixed]) ::slotted(s-tab-item){flex-basis:100%;flex-shrink:1}',
    Fs = '<div class="container" part="container"><slot></slot></div>',
    I = class extends h({
      style: Ls,
      template: Fs,
      props: Ts,
      setup(t) {
        let e = t.querySelector("slot"),
          r = t.querySelector(".container"),
          a = new S({ context: this, class: K, slot: e }),
          i = getComputedStyle(this),
          l = () => {
            let n =
                i.getPropertyValue("--s-motion-easing-standard") ||
                "cubic-bezier(0.2, 0, 0, 1.0)",
              d = i.getPropertyValue("--s-motion-duration-medium4") || "400ms";
            return { easing: n, duration: k(d) };
          };
        return (
          (a.onUpdate = (n) => {
            if (a.select && r.scrollWidth !== r.offsetWidth) {
              let m =
                a.select.offsetLeft -
                r.offsetLeft -
                (r.offsetWidth / 2 - a.select.offsetWidth / 2);
              r.scrollTo({ left: m, behavior: "smooth" });
            }
            if (!n || !a.select || !this.isConnected) return;
            let d = n.shadowRoot
                .querySelector(".indicator")
                .getBoundingClientRect(),
              c = a.select.shadowRoot?.querySelector(".indicator"),
              o = c.getBoundingClientRect(),
              f = d.left - o.left;
            (c.style.transform = `translateX(${
              o.left > d.left ? f : Math.abs(f)
            }px)`),
              (c.style.width = `${d.width}px`);
            let x = c.animate(
              [{ transform: "translateX(0)", width: `${o.width}px` }],
              l()
            );
            x.onfinish =
              x.oncancel =
              x.onremove =
                () => {
                  c.style.removeProperty("transform"),
                    c.style.removeProperty("width");
                };
          }),
          {
            expose: {
              get options() {
                return a.list;
              },
              get selectedIndex() {
                return a.selectedIndex;
              },
            },
            value: { get: () => a.value, set: (n) => (a.value = n) },
          }
        );
      },
    }) {},
    Ms = "s-tab-item",
    As = g({ selected: !1, $value: "" }),
    Ps =
      ":host{display:flex;align-items:center;justify-content:center;min-height:48px;position:relative;cursor:pointer;font-size:.875rem;font-weight:500;text-transform:capitalize;padding:0 16px}:host([selected=true]){color:var(--s-color-primary, #006782)}.container{display:flex;justify-content:center;align-items:center;flex-direction:column;position:relative;min-height:inherit}.indicator{position:absolute;bottom:0;left:0;height:3px;width:100%;background:var(--s-color-primary, #006782);border-radius:1.5px 1.5px 0 0;opacity:0}:host([selected=true]) .indicator{opacity:1}.text{display:flex;align-items:center;line-height:1}::slotted([slot=icon]){width:24px;height:24px;color:currentColor;fill:currentColor;margin:10px 0}::slotted([slot=text]){white-space:nowrap;text-overflow:ellipsis;line-height:1}.icon ::slotted([slot=text]){margin-top:-6px;height:26px}::slotted([slot=badge]){margin-left:4px}::slotted([slot=badge]:not(:empty)){width:auto}.icon ::slotted([slot=badge]){position:absolute;right:0;width:8px;top:12px;margin-left:0}",
    Ds =
      '<div class="container" part="container"><slot name="icon"></slot><div class="text" part="text"><slot name="text"></slot><slot name="badge"></slot></div><div class="indicator" part="indicator"></div></div><s-ripple attached="true" part="ripple"></s-ripple>',
    K = class extends h({
      style: Ps,
      template: Ds,
      props: As,
      setup(t) {
        let e = t.querySelector(".container");
        return (
          t.querySelector("[name=icon]").addEventListener("slotchange", (r) => {
            let a = r.target.assignedElements().length;
            e.classList[a > 0 ? "add" : "remove"]("icon");
          }),
          this.addEventListener("click", () => {
            !(this.parentNode instanceof I) ||
              this.selected ||
              this.dispatchEvent(new Event(`${tt}:select`, { bubbles: !0 }));
          }),
          {
            selected: () => {
              this.parentNode instanceof I &&
                this.dispatchEvent(new Event(`${tt}:update`, { bubbles: !0 }));
            },
          }
        );
      },
    }) {};
  I.define(tt), K.define(Ms);
  var Zs = "s-table",
    Bs =
      ":host{display:inline-block;font-size:.875rem;overflow:auto;border:solid 1px var(--s-color-outline-variant, #C0C8CC);border-radius:4px;white-space:nowrap}slot{display:table;border-collapse:collapse;min-width:100%}@media (pointer: fine){:host::-webkit-scrollbar{width:6px;height:6px;background:transparent}:host::-webkit-scrollbar-thumb{background:var(--s-color-outline-variant, #C0C8CC);border-radius:3px}@supports not selector(::-webkit-scrollbar){:host{scrollbar-color:var(--s-color-outline-variant, #C0C8CC) transparent}}}",
    Ns = "<slot></slot>",
    He = class extends h({ style: Bs, template: Ns }) {},
    Hs = "s-thead",
    js =
      ":host{display:table-header-group;font-weight:600;position:sticky;top:0;border-bottom:solid 1px var(--s-color-outline-variant, #C0C8CC);background:var(--s-color-surface-container, #ECEEF0);color:var(--s-color-on-surface-variant, #40484C)}",
    Is = "<slot></slot>",
    je = class extends h({ style: js, template: Is }) {},
    Ws = "s-tbody",
    Vs =
      ":host{display:table-row-group;color:var(--s-color-on-surface, #191C1E)}::slotted(s-tr:not(:first-child)){border-top:solid 1px var(--s-color-outline-variant, #C0C8CC)}",
    Ys = "<slot></slot>",
    Ie = class extends h({ style: Vs, template: Ys }) {},
    Rs = "s-tr",
    _s = ":host{display:table-row}",
    Os = "<slot></slot>",
    We = class extends h({ style: _s, template: Os }) {},
    Xs = "s-th",
    Gs =
      ":host{display:table-cell;padding:12px 16px;text-transform:capitalize}",
    Us = "<slot></slot>",
    Ve = class extends h({ style: Gs, template: Us }) {},
    Qs = "s-td",
    Js = ":host{display:table-cell;user-select:text;padding:12px 16px}",
    Ks = "<slot></slot>",
    Ye = class extends h({ style: Js, template: Ks }) {};
  He.define(Zs),
    je.define(Hs),
    Ie.define(Ws),
    We.define(Rs),
    Ve.define(Xs),
    Ye.define(Qs);
  var ei = "s-text-field",
    ti = g({
      $label: "",
      $placeholder: "",
      disabled: !1,
      type: ["text", "number", "password", "multiline"],
      error: !1,
      $value: "",
      $maxLength: -1,
      readOnly: !1,
      multiLine: !1,
      countered: !1,
    }),
    oi =
      ':host{display:inline-grid;vertical-align:middle;font-size:.875rem;min-height:48px;width:280px;color:var(--s-color-on-surface, #191C1E);--text-field-border-radius: 4px;--text-field-border-color: var(--s-color-outline, #70787D);--text-field-padding: 16px;--text-field-padding-top: var(--text-field-padding);--text-field-padding-bottom: var(--text-field-padding);--text-field-padding-left: var(--text-field-padding);--text-field-padding-right: var(--text-field-padding)}:host([disabled=true]){pointer-events:none;opacity:.38}:host([type=multiline]){line-height:24px;--text-field-padding-top: 12px;--text-field-padding-bottom: 12px}.field{display:block;min-height:inherit;font-size:inherit;--field-border-radius: var(--text-field-border-radius);--field-border-color: var(--text-field-border-color);--field-padding: var(--text-field-padding);--field-padding-top: var(--text-field-padding-top);--field-padding-bottom: var(--text-field-padding-bottom);--field-padding-left: var(--text-field-padding-left);--field-padding-right: var(--text-field-padding-right)}:host([error=true]) .field{--s-color-primary: var(--s-color-error, #BA1A1A);--field-border-color: var(--s-color-error, #BA1A1A);--field-border-width: 2px}:host([type=multiline]) .label{height:fit-content;padding-top:var(--text-field-padding-top);padding-bottom:var(--text-field-padding-bottom)}.view{flex-grow:1;padding:0;flex-direction:column;position:relative}input,textarea{border:none;height:100%;width:100%;padding-left:var(--field-padding-left);padding-right:var(--field-padding-right);background:none;outline:none;font-size:inherit;color:inherit;box-sizing:border-box;line-height:inherit;font-family:inherit;caret-color:var(--s-color-primary, #006782);display:block;-moz-appearance:textfield}textarea{position:absolute;left:0;top:0;width:100%;height:100%;resize:none;scrollbar-width:none;display:none}input::placeholder,textarea::placeholder{color:var(--text-field-border-color)}input::selection,textarea::selection{background:var(--s-color-primary, #006782);color:var(--s-color-on-primary, #ffffff)}:host([type=multiline]) input,.text>.counter{display:none}textarea,.shadow{line-height:inherit;word-wrap:break-word;word-break:break-all;white-space:pre-wrap;box-sizing:border-box;padding-top:var(--text-field-padding-top);padding-bottom:var(--text-field-padding-bottom);padding-left:var(--text-field-padding-left);padding-right:var(--text-field-padding-right)}:host([type=multiline]) :is(textarea,.shadow),:host([countered=true]) .counter{display:block}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button{-webkit-appearance:none}input:is(::-ms-clear,::-ms-reveal){display:none}.shadow{pointer-events:none;display:none;opacity:0;width:100%;min-height:100%}.shadow:after{content:" "}.text{display:flex;align-items:flex-end;width:100%;box-sizing:border-box;font-size:.75rem;color:var(--text-field-border-color)}:host([error=true]) .text{color:var(--s-color-error, #BA1A1A)}.text>slot[name=text]{display:block;flex-grow:1}.text>.counter,::slotted([slot=text]){margin-top:8px}.toggle{flex-direction:column}.toggle,.toggle>s-ripple{display:flex;justify-content:center;align-items:center}.toggle svg{pointer-events:none}.toggle>s-ripple{display:none}.toggle>.up,.toggle>.down{height:16px;width:24px;border-radius:4px;margin-right:8px;margin-left:-4px}.toggle>.visibility{width:40px;height:40px;border-radius:50%;margin:0 4px 0 -4px}.toggle>.visibility>svg{display:none}:host([type=number]) .toggle>:is(.up,.down),:host([type=password]) :is(.toggle>.visibility,.toggle:not(.show-password)>.visibility>.on,.toggle.show-password>.visibility>.off){display:flex}svg,::slotted(svg){fill:var(--s-color-on-surface-variant, #40484C);height:24px;width:24px;flex-shrink:0}::slotted(s-icon-button[slot=start]){margin-left:4px;margin-right:calc(var(--text-field-border-radius) - var(--text-field-padding-left) + 4px)}::slotted(s-icon-button[slot=end]){margin-right:4px;margin-left:calc(var(--text-field-border-radius) - var(--text-field-padding-right) + 4px)}::slotted(:is(s-icon[slot=start],svg[slot=start])){margin-left:12px;margin-right:calc(var(--text-field-border-radius) - var(--text-field-padding-left) + 8px)}::slotted(:is(s-icon[slot=end],svg[slot=end])){margin-right:12px;margin-left:calc(var(--text-field-border-radius) - var(--text-field-padding-right) + 8px)}',
    ri =
      '<s-field class="field" fixed="false"><div slot="label" class="label"></div><div class="view"><div class="shadow"></div><input type="text" part="input"> <textarea part="textarea"></textarea></div><slot slot="start" name="start"></slot><slot slot="end" name="end"><div class="toggle" part="toggle"><s-ripple class="up"><svg viewBox="0 -960 960 960"><path d="m280-400 200-200 200 200H280Z"></path></svg></s-ripple><s-ripple class="down"><svg viewBox="0 -960 960 960"><path d="M480-360 280-560h400L480-360Z"></path></svg></s-ripple><s-ripple class="visibility"><svg viewBox="0 -960 960 960" class="on"><path d="M480-320q75 0 127.5-52.5T660-500q0-75-52.5-127.5T480-680q-75 0-127.5 52.5T300-500q0 75 52.5 127.5T480-320Zm0-72q-45 0-76.5-31.5T372-500q0-45 31.5-76.5T480-608q45 0 76.5 31.5T588-500q0 45-31.5 76.5T480-392Zm0 192q-146 0-266-81.5T40-500q54-137 174-218.5T480-800q146 0 266 81.5T920-500q-54 137-174 218.5T480-200Zm0-300Zm0 220q113 0 207.5-59.5T832-500q-50-101-144.5-160.5T480-720q-113 0-207.5 59.5T128-500q50 101 144.5 160.5T480-280Z"></path></svg> <svg viewBox="0 -960 960 960" class="off"><path d="m644-428-58-58q9-47-27-88t-93-32l-58-58q17-8 34.5-12t37.5-4q75 0 127.5 52.5T660-500q0 20-4 37.5T644-428Zm128 126-58-56q38-29 67.5-63.5T832-500q-50-101-143.5-160.5T480-720q-29 0-57 4t-55 12l-62-62q41-17 84-25.5t90-8.5q151 0 269 83.5T920-500q-23 59-60.5 109.5T772-302Zm20 246L624-222q-35 11-70.5 16.5T480-200q-151 0-269-83.5T40-500q21-53 53-98.5t73-81.5L56-792l56-56 736 736-56 56ZM222-624q-29 26-53 57t-41 67q50 101 143.5 160.5T480-280q20 0 39-2.5t39-5.5l-36-38q-11 3-21 4.5t-21 1.5q-75 0-127.5-52.5T300-500q0-11 1.5-21t4.5-21l-84-82Zm319 93Zm-151 75Z"></path></svg></s-ripple></div></slot></s-field><div class="text" part="text"><slot name="text"></slot><div class="counter" part="counter"></div></div>',
    Re = class extends h({
      style: oi,
      template: ri,
      props: ti,
      setup(t) {
        let e = t.querySelector(".field"),
          r = t.querySelector(".label"),
          a = t.querySelector(".shadow"),
          i = t.querySelector(".counter"),
          l = t.querySelector(".toggle"),
          n = {
            input: t.querySelector("input"),
            textarea: t.querySelector("textarea"),
          },
          d = () => (this.type === "multiline" ? n.textarea : n.input),
          c = () => {
            this.countered &&
              (i.textContent = `${d().value.length}/${this.maxLength}`);
          },
          o = () => this.dispatchEvent(new Event("change")),
          f = () => {
            (e.fixed = !0), (e.focused = !0);
          },
          x = () => {
            (e.focused = !1), d().value === "" && !this.error && (e.fixed = !1);
          };
        (n.input.oninput = c),
          (n.input.onfocus = f),
          (n.input.onblur = x),
          (n.input.onchange = o),
          (n.textarea.onfocus = f),
          (n.textarea.onblur = x),
          (n.textarea.onchange = o),
          (n.textarea.oninput = () => {
            (a.textContent = n.textarea.value), c();
          });
        let m = (p) => {
          (this.value = `${parseInt(this.value || "0") + p}`),
            this.dispatchEvent(new Event("input")),
            this.dispatchEvent(new Event("change"));
        };
        return (
          (t.querySelector(".up").onclick = () => m(1)),
          (t.querySelector(".down").onclick = () => m(-1)),
          (t.querySelector(".visibility").onclick = () => {
            (n.input.type = l.classList.contains("show-password")
              ? "password"
              : "text"),
              l.classList.toggle("show-password");
          }),
          {
            expose: {
              get native() {
                return d();
              },
            },
            label: (p) => (r.textContent = p),
            type: (p, u) => {
              (n.input.type =
                p === "password"
                  ? l.classList.contains("show-password")
                    ? "text"
                    : "password"
                  : p),
                p === "multiline" &&
                  ((n.textarea.value = n.input.value),
                  (a.textContent = n.input.value)),
                u === "multiline" && (n.input.value = n.textarea.value);
            },
            error: (p) => {
              if (p) return (e.fixed = !0);
              d().value === "" && (e.fixed = !1);
            },
            value: {
              get: () => d().value,
              set: (p) => {
                (n.input.value = p),
                  (n.textarea.value = p),
                  (a.textContent = p),
                  c(),
                  this.error || (e.fixed = p !== "");
              },
            },
            placeholder: (p) => {
              (n.input.placeholder = p), (n.textarea.placeholder = p);
            },
            readOnly: (p) => {
              (n.input.readOnly = p), (n.textarea.readOnly = p);
            },
            disabled: (p) => {
              (n.input.disabled = p), (n.textarea.disabled = p);
            },
            maxLength: (p) => {
              (n.input.maxLength = p), (n.textarea.maxLength = p), c();
            },
            multiLine: (p) => (this.type = p ? "multiline" : "text"),
            countered: c,
          }
        );
      },
    }) {};
  Re.define(ei);
  var si = "s-tooltip",
    ii = g({ align: ["top", "bottom", "left", "right"], disabled: !1 }),
    ai =
      ":host{display:inline-flex;vertical-align:middle;text-align:left}.popup{position:fixed;display:none;inset:0;margin:0;width:fit-content;height:fit-content;background:none;border:none;outline:none;max-width:none;max-height:none;font-size:.875rem;font-weight:400;padding:6px 8px;border-radius:4px;white-space:nowrap;filter:opacity(.88);background:var(--s-color-inverse-surface, #2E3132);color:var(--s-color-inverse-on-surface, #EFF1F3)}::slotted(img){display:block;border-radius:4px;margin:2px 0;max-width:280px}",
    ni =
      '<slot name="trigger" part="trigger"></slot><div class="popup" popover="manual" part="popup"><slot></slot></div>',
    _e = class extends h({
      style: ai,
      template: ni,
      props: ii,
      setup(t) {
        let e = t.querySelector("slot[name=trigger]"),
          r = t.querySelector(".popup"),
          a = getComputedStyle(this),
          i = !1,
          l = () => {
            let o =
                a.getPropertyValue("--s-motion-easing-standard") ||
                "cubic-bezier(0.2, 0, 0, 1.0)",
              f = a.getPropertyValue("--s-motion-duration-medium4") || "400ms";
            return { easing: o, duration: k(f) };
          },
          n = () => {
            if (!this.isConnected || this.disabled) return;
            if (((r.style.display = "block"), (i = !0), r.showPopover))
              r.showPopover();
            else {
              let y = Be(t);
              (r.style.marginLeft = `${-y.left}px`),
                (r.style.marginTop = `${-y.top}px`),
                (r.style.zIndex = "3");
            }
            let o = this.getBoundingClientRect(),
              f = 4,
              x = r.offsetWidth,
              m = r.offsetHeight,
              p = { top: 0, left: 0 },
              u = {
                middle(y) {
                  p.left = o.left - (x - o.width) / 2;
                  let v = () => (
                      (p.top = o.top + o.height + f), p.top + m > innerHeight
                    ),
                    b = () => ((p.top = o.top - m - f), p.top < 0);
                  p.left < 0 && (p.left = o.left),
                    p.left + x > innerWidth && (p.left = o.left + o.width - x),
                    y === "top" && b() && v(),
                    y === "bottom" && v() && b();
                },
                left() {
                  return (
                    (p.left = o.left - x - f),
                    (p.top = o.top - (m - o.height) / 2),
                    p.left < 0
                  );
                },
                right() {
                  return (
                    (p.left = o.left + o.width + f),
                    (p.top = o.top - (m - o.height) / 2),
                    p.left + x > innerWidth
                  );
                },
              };
            switch (this.align) {
              case "bottom":
              case "top":
                u.middle(this.align);
                break;
              case "left":
                u.left() && u.right();
                break;
              case "right":
                u.right() && u.left();
                break;
            }
            (r.style.top = `${p.top}px`),
              (r.style.left = `${p.left}px`),
              r.animate({ opacity: [0, 1] }, l());
          },
          d = 0,
          c = () => {
            clearTimeout(d),
              (i = !1),
              r.animate({ opacity: [1, 0] }, l()).finished.then(() => {
                i ||
                  (r.hidePopover && r.hidePopover(),
                  r.style.removeProperty("display"));
              });
          };
        e.addEventListener(
          "touchstart",
          () => {
            E.pointerFine.matches ||
              (clearTimeout(d), (d = setTimeout(() => n(), 600)));
          },
          { passive: !0 }
        ),
          (e.ontouchend = () => {
            clearTimeout(d), c();
          }),
          (e.onmouseenter = () => E.pointerFine.matches && n()),
          (e.onmouseleave = () => E.pointerFine.matches && c());
      },
    }) {};
  _e.define(si);
  globalThis.sober || (globalThis.sober = {});
  globalThis.sober = { ...globalThis.sober, ...ot };
})();

