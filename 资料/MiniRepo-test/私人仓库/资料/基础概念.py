# -*- coding: utf-8 -*-
"""
    # -*- coding: <encoding-name> -*-
    需要放到代码的第一行，用于指定编码方式
        encoding-name：
            1.UTF-16 每个字符站两个字节
            2.UTF-8 # 默认常用，适用于最常见的场景，包好中文，日文，ASCII字符等
            3.UTF-32 每个字符站四个字节
            4.GBK 简体中文编码，是 GB2312 的扩展。它能够表示更多的汉字和符号。
            5.ISO-8859-1  是一种单字节编码，主要用于西欧语言。它支持 256 个字符，包括拉丁字母和一些特殊符号。
            5.Windows-1252 是一种单字节编码，主要用于 Windows 系统中的西欧语言。它与 ISO-8859-1 类似，但包含一些额外的字符。
            7.ASCII 是一种单字节编码，只支持 128 个字符，包括英文字母、数字和一些控制字符。它是最基本的编码方式，但无法表示非英文字符。

未安装pip情况下
    python -m ensurepip --default-pip

"""

# 关键字：
"""
False      await      else       import     pass
None       break      except     in         raise
True       class      finally    is         return
and        continue   for        lambda     try
as         def        from       nonlocal   while
assert     del        global     not        with
async      elif       if         or         yield

"""
# 运算符：
"""
+       -       *       **      /       //      %      @
<<      >>      &       |       ^       ~       :=
<       >       <=      >=      ==      !=
"""
# 分隔符：
"""
(       )       [       ]       {       }
,       :       !       .       ;       @       =
->      +=      -=      *=      /=      //=     %=
@=      &=      |=      ^=      >>=     <<=     **=
"""
# 获取内存地址 id(x) 就是存放 x 的内存的地址。
"""
    类型：
        值可以改变的对象被称为 可变对象；值不可以改变的对象就被称为 不可变对象。
        不可变容器对象如果包含对可变对象的引用，当后者的值改变时，前者的值也会改变，但是容易还是数以不可变对象，因为它所包含的对象集是不会改变的。
        数字、字符串和元组是不可变的，而字典和列表是可变的。
"""
"""
None: 此类型只有一种取值。是一个具有此值的单独对象。此对象通过内置名称 None 访问。在许多情况下它被用来表示空值，例如未显式指明返回值的函数将返回 None。它的逻辑值为假。
NotImplemented: 此类型只有一种取值。 是一个具有该值的单独对象。数值方法和丰富比较方法如未实现指定运算符表示的运算则应返回该值。它不应被解读为布尔值。
Ellipsis:此类型只有一种取值。是一个具有此值的单独对象。此对象通过字面值 ... 或内置名称 Ellipsis 访问。它的逻辑值为真。
数字：int（1） 和 float（1.1） 和 complex（双精度浮点数来表示复数值，数学、工程、物理和计算机科学等多个领域都有广泛的应用），bool表示： 0 = False 1=True


可变序列：不可变序列类型的对象一旦创建就不能再改变。(如果对象包含对其他对象的引用，其中的可变对象就是可以改变的；但是，一个不可变对象所直接引用的对象集是不能改变的。)
    字符串，元组， 数字
不可变序列：可变序列在被创建后仍可被改变。
    列表，字典 ，集合
    
| 特性       | 不可变序列                                     | 可变序列                  |
| -------- | ----------------------------------------- | --------------------- |
| **修改内容** | 不能直接修改内容，修改会创建新的对象                        | 可以直接修改内容              |
| **哈希性**  | 可哈希，可以作为字典的键                              | 不可哈希，不能作为字典的键         |
| **内存效率** | 通常更节省内存，因为不可变对象可以共享                       | 可能占用更多内存，因为修改操作可能涉及复制 |
| **线程安全** | 线程安全，因为不可变对象不会被修改                         | 需要额外的同步机制来保证线程安全      |
| **示例类型** | `str`, `tuple`, `int`, `float`, `complex` | `list`, `dict`, `set` |

"""

"""
生成器：
    
协程函数
异步生成器函数
内置函数和内置方法
类
类实例
"""

"""
模块
"""
